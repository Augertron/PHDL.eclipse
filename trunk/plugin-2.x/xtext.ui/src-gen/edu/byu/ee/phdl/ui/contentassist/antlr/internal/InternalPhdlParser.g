/*
* generated by Xtext
*/
parser grammar InternalPhdlParser;

options {
	tokenVocab=InternalPhdlLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package edu.byu.ee.phdl.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import edu.byu.ee.phdl.services.PhdlGrammarAccess;

}

@members {
 
 	private PhdlGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("KEYWORD_1", "'&'");
		tokenNameToValue.put("KEYWORD_2", "'('");
		tokenNameToValue.put("KEYWORD_3", "')'");
		tokenNameToValue.put("KEYWORD_4", "'*'");
		tokenNameToValue.put("KEYWORD_5", "','");
		tokenNameToValue.put("KEYWORD_6", "'.'");
		tokenNameToValue.put("KEYWORD_7", "':'");
		tokenNameToValue.put("KEYWORD_8", "';'");
		tokenNameToValue.put("KEYWORD_9", "'<'");
		tokenNameToValue.put("KEYWORD_10", "'='");
		tokenNameToValue.put("KEYWORD_11", "'>'");
		tokenNameToValue.put("KEYWORD_12", "'['");
		tokenNameToValue.put("KEYWORD_13", "']'");
		tokenNameToValue.put("KEYWORD_14", "'{'");
		tokenNameToValue.put("KEYWORD_15", "'}'");
		tokenNameToValue.put("KEYWORD_16", "'of'");
		tokenNameToValue.put("KEYWORD_17", "'net'");
		tokenNameToValue.put("KEYWORD_18", "'pin'");
		tokenNameToValue.put("KEYWORD_19", "'attr'");
		tokenNameToValue.put("KEYWORD_20", "'info'");
		tokenNameToValue.put("KEYWORD_21", "'inst'");
		tokenNameToValue.put("KEYWORD_22", "'open'");
		tokenNameToValue.put("KEYWORD_23", "'port'");
		tokenNameToValue.put("KEYWORD_24", "'this'");
		tokenNameToValue.put("KEYWORD_25", "'inpin'");
		tokenNameToValue.put("KEYWORD_26", "'iopin'");
		tokenNameToValue.put("KEYWORD_27", "'ncpin'");
		tokenNameToValue.put("KEYWORD_28", "'ocpin'");
		tokenNameToValue.put("KEYWORD_29", "'oepin'");
		tokenNameToValue.put("KEYWORD_30", "'design'");
		tokenNameToValue.put("KEYWORD_31", "'device'");
		tokenNameToValue.put("KEYWORD_32", "'import'");
		tokenNameToValue.put("KEYWORD_33", "'outpin'");
		tokenNameToValue.put("KEYWORD_34", "'pwrpin'");
		tokenNameToValue.put("KEYWORD_35", "'suppin'");
		tokenNameToValue.put("KEYWORD_36", "'tripin'");
		tokenNameToValue.put("KEYWORD_37", "'combine'");
		tokenNameToValue.put("KEYWORD_38", "'newattr'");
		tokenNameToValue.put("KEYWORD_39", "'package'");
		tokenNameToValue.put("KEYWORD_40", "'passpin'");
		tokenNameToValue.put("KEYWORD_41", "'subinst'");
		tokenNameToValue.put("KEYWORD_42", "'subdesign'");
 	}
 	
    public void setGrammarAccess(PhdlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRulePhdlModel
entryRulePhdlModel 
:
{ before(grammarAccess.getPhdlModelRule()); }
	 rulePhdlModel
{ after(grammarAccess.getPhdlModelRule()); } 
	 EOF 
;

// Rule PhdlModel
rulePhdlModel 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPhdlModelAccess().getGroup()); }
(rule__PhdlModel__Group__0)
{ after(grammarAccess.getPhdlModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDevice
entryRuleDevice 
:
{ before(grammarAccess.getDeviceRule()); }
	 ruleDevice
{ after(grammarAccess.getDeviceRule()); } 
	 EOF 
;

// Rule Device
ruleDevice 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDeviceAccess().getGroup()); }
(rule__Device__Group__0)
{ after(grammarAccess.getDeviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeviceElement
entryRuleDeviceElement 
:
{ before(grammarAccess.getDeviceElementRule()); }
	 ruleDeviceElement
{ after(grammarAccess.getDeviceElementRule()); } 
	 EOF 
;

// Rule DeviceElement
ruleDeviceElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDeviceElementAccess().getAlternatives()); }
(rule__DeviceElement__Alternatives)
{ after(grammarAccess.getDeviceElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttr
entryRuleAttr 
:
{ before(grammarAccess.getAttrRule()); }
	 ruleAttr
{ after(grammarAccess.getAttrRule()); } 
	 EOF 
;

// Rule Attr
ruleAttr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAttrAccess().getGroup()); }
(rule__Attr__Group__0)
{ after(grammarAccess.getAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePin
entryRulePin 
:
{ before(grammarAccess.getPinRule()); }
	 rulePin
{ after(grammarAccess.getPinRule()); } 
	 EOF 
;

// Rule Pin
rulePin 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPinAccess().getGroup()); }
(rule__Pin__Group__0)
{ after(grammarAccess.getPinAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInfo
entryRuleInfo 
:
{ before(grammarAccess.getInfoRule()); }
	 ruleInfo
{ after(grammarAccess.getInfoRule()); } 
	 EOF 
;

// Rule Info
ruleInfo 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInfoAccess().getGroup()); }
(rule__Info__Group__0)
{ after(grammarAccess.getInfoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDesign
entryRuleDesign 
:
{ before(grammarAccess.getDesignRule()); }
	 ruleDesign
{ after(grammarAccess.getDesignRule()); } 
	 EOF 
;

// Rule Design
ruleDesign 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDesignAccess().getGroup()); }
(rule__Design__Group__0)
{ after(grammarAccess.getDesignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDesignElement
entryRuleDesignElement 
:
{ before(grammarAccess.getDesignElementRule()); }
	 ruleDesignElement
{ after(grammarAccess.getDesignElementRule()); } 
	 EOF 
;

// Rule DesignElement
ruleDesignElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDesignElementAccess().getAlternatives()); }
(rule__DesignElement__Alternatives)
{ after(grammarAccess.getDesignElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnection
entryRuleConnection 
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConnectionAccess().getAlternatives()); }
(rule__Connection__Alternatives)
{ after(grammarAccess.getConnectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNetElement
entryRuleNetElement 
:
{ before(grammarAccess.getNetElementRule()); }
	 ruleNetElement
{ after(grammarAccess.getNetElementRule()); } 
	 EOF 
;

// Rule NetElement
ruleNetElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNetElementAccess().getAlternatives()); }
(rule__NetElement__Alternatives)
{ after(grammarAccess.getNetElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePortElement
entryRulePortElement 
:
{ before(grammarAccess.getPortElementRule()); }
	 rulePortElement
{ after(grammarAccess.getPortElementRule()); } 
	 EOF 
;

// Rule PortElement
rulePortElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPortElementAccess().getInfoParserRuleCall()); }
	ruleInfo
{ after(grammarAccess.getPortElementAccess().getInfoParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstance
entryRuleInstance 
:
{ before(grammarAccess.getInstanceRule()); }
	 ruleInstance
{ after(grammarAccess.getInstanceRule()); } 
	 EOF 
;

// Rule Instance
ruleInstance 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInstanceAccess().getAlternatives()); }
(rule__Instance__Alternatives)
{ after(grammarAccess.getInstanceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceElement
entryRuleInstanceElement 
:
{ before(grammarAccess.getInstanceElementRule()); }
	 ruleInstanceElement
{ after(grammarAccess.getInstanceElementRule()); } 
	 EOF 
;

// Rule InstanceElement
ruleInstanceElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInstanceElementAccess().getAlternatives()); }
(rule__InstanceElement__Alternatives)
{ after(grammarAccess.getInstanceElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubInstanceElement
entryRuleSubInstanceElement 
:
{ before(grammarAccess.getSubInstanceElementRule()); }
	 ruleSubInstanceElement
{ after(grammarAccess.getSubInstanceElementRule()); } 
	 EOF 
;

// Rule SubInstanceElement
ruleSubInstanceElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSubInstanceElementAccess().getAlternatives()); }
(rule__SubInstanceElement__Alternatives)
{ after(grammarAccess.getSubInstanceElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefAttr
entryRuleRefAttr 
:
{ before(grammarAccess.getRefAttrRule()); }
	 ruleRefAttr
{ after(grammarAccess.getRefAttrRule()); } 
	 EOF 
;

// Rule RefAttr
ruleRefAttr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRefAttrAccess().getGroup()); }
(rule__RefAttr__Group__0)
{ after(grammarAccess.getRefAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewAttr
entryRuleNewAttr 
:
{ before(grammarAccess.getNewAttrRule()); }
	 ruleNewAttr
{ after(grammarAccess.getNewAttrRule()); } 
	 EOF 
;

// Rule NewAttr
ruleNewAttr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNewAttrAccess().getGroup()); }
(rule__NewAttr__Group__0)
{ after(grammarAccess.getNewAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePinAssign
entryRulePinAssign 
:
{ before(grammarAccess.getPinAssignRule()); }
	 rulePinAssign
{ after(grammarAccess.getPinAssignRule()); } 
	 EOF 
;

// Rule PinAssign
rulePinAssign 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPinAssignAccess().getGroup()); }
(rule__PinAssign__Group__0)
{ after(grammarAccess.getPinAssignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubAttr
entryRuleSubAttr 
:
{ before(grammarAccess.getSubAttrRule()); }
	 ruleSubAttr
{ after(grammarAccess.getSubAttrRule()); } 
	 EOF 
;

// Rule SubAttr
ruleSubAttr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSubAttrAccess().getGroup()); }
(rule__SubAttr__Group__0)
{ after(grammarAccess.getSubAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefTail
entryRuleRefTail 
:
{ before(grammarAccess.getRefTailRule()); }
	 ruleRefTail
{ after(grammarAccess.getRefTailRule()); } 
	 EOF 
;

// Rule RefTail
ruleRefTail 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRefTailAccess().getGroup()); }
(rule__RefTail__Group__0)
{ after(grammarAccess.getRefTailAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePortAssign
entryRulePortAssign 
:
{ before(grammarAccess.getPortAssignRule()); }
	 rulePortAssign
{ after(grammarAccess.getPortAssignRule()); } 
	 EOF 
;

// Rule PortAssign
rulePortAssign 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPortAssignAccess().getGroup()); }
(rule__PortAssign__Group__0)
{ after(grammarAccess.getPortAssignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnectionAssign
entryRuleConnectionAssign 
:
{ before(grammarAccess.getConnectionAssignRule()); }
	 ruleConnectionAssign
{ after(grammarAccess.getConnectionAssignRule()); } 
	 EOF 
;

// Rule ConnectionAssign
ruleConnectionAssign 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConnectionAssignAccess().getGroup()); }
(rule__ConnectionAssign__Group__0)
{ after(grammarAccess.getConnectionAssignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcatenation
entryRuleConcatenation 
:
{ before(grammarAccess.getConcatenationRule()); }
	 ruleConcatenation
{ after(grammarAccess.getConcatenationRule()); } 
	 EOF 
;

// Rule Concatenation
ruleConcatenation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConcatenationAccess().getAlternatives()); }
(rule__Concatenation__Alternatives)
{ after(grammarAccess.getConcatenationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnectionRef
entryRuleConnectionRef 
:
{ before(grammarAccess.getConnectionRefRule()); }
	 ruleConnectionRef
{ after(grammarAccess.getConnectionRefRule()); } 
	 EOF 
;

// Rule ConnectionRef
ruleConnectionRef 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConnectionRefAccess().getGroup()); }
(rule__ConnectionRef__Group__0)
{ after(grammarAccess.getConnectionRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnectionName
entryRuleConnectionName 
:
{ before(grammarAccess.getConnectionNameRule()); }
	 ruleConnectionName
{ after(grammarAccess.getConnectionNameRule()); } 
	 EOF 
;

// Rule ConnectionName
ruleConnectionName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConnectionNameAccess().getNameAssignment()); }
(rule__ConnectionName__NameAssignment)
{ after(grammarAccess.getConnectionNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndices
entryRuleIndices 
:
{ before(grammarAccess.getIndicesRule()); }
	 ruleIndices
{ after(grammarAccess.getIndicesRule()); } 
	 EOF 
;

// Rule Indices
ruleIndices 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIndicesAccess().getGroup()); }
(rule__Indices__Group__0)
{ after(grammarAccess.getIndicesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSlices
entryRuleSlices 
:
{ before(grammarAccess.getSlicesRule()); }
	 ruleSlices
{ after(grammarAccess.getSlicesRule()); } 
	 EOF 
;

// Rule Slices
ruleSlices 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSlicesAccess().getGroup()); }
(rule__Slices__Group__0)
{ after(grammarAccess.getSlicesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVector
entryRuleVector 
:
{ before(grammarAccess.getVectorRule()); }
	 ruleVector
{ after(grammarAccess.getVectorRule()); } 
	 EOF 
;

// Rule Vector
ruleVector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVectorAccess().getGroup()); }
(rule__Vector__Group__0)
{ after(grammarAccess.getVectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifier
entryRuleQualifier 
:
{ before(grammarAccess.getQualifierRule()); }
	 ruleQualifier
{ after(grammarAccess.getQualifierRule()); } 
	 EOF 
;

// Rule Qualifier
ruleQualifier 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQualifierAccess().getGroup()); }
(rule__Qualifier__Group__0)
{ after(grammarAccess.getQualifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard 
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
(rule__QualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePhdlID
entryRulePhdlID 
:
{ before(grammarAccess.getPhdlIDRule()); }
	 rulePhdlID
{ after(grammarAccess.getPhdlIDRule()); } 
	 EOF 
;

// Rule PhdlID
rulePhdlID 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPhdlIDAccess().getAlternatives()); }
(rule__PhdlID__Alternatives)
{ after(grammarAccess.getPhdlIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule PinType
rulePinType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinTypeAccess().getAlternatives()); }
(rule__PinType__Alternatives)
{ after(grammarAccess.getPinTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PhdlModel__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhdlModelAccess().getPackagesAssignment_1_0()); }
(rule__PhdlModel__PackagesAssignment_1_0)
{ after(grammarAccess.getPhdlModelAccess().getPackagesAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getPhdlModelAccess().getDevicesAssignment_1_1()); }
(rule__PhdlModel__DevicesAssignment_1_1)
{ after(grammarAccess.getPhdlModelAccess().getDevicesAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getPhdlModelAccess().getDesignsAssignment_1_2()); }
(rule__PhdlModel__DesignsAssignment_1_2)
{ after(grammarAccess.getPhdlModelAccess().getDesignsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getDevicesAssignment_4_0()); }
(rule__Package__DevicesAssignment_4_0)
{ after(grammarAccess.getPackageAccess().getDevicesAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getDesignsAssignment_4_1()); }
(rule__Package__DesignsAssignment_4_1)
{ after(grammarAccess.getPackageAccess().getDesignsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviceElementAccess().getAttrParserRuleCall_0()); }
	ruleAttr
{ after(grammarAccess.getDeviceElementAccess().getAttrParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeviceElementAccess().getPinParserRuleCall_1()); }
	rulePin
{ after(grammarAccess.getDeviceElementAccess().getPinParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeviceElementAccess().getInfoParserRuleCall_2()); }
	ruleInfo
{ after(grammarAccess.getDeviceElementAccess().getInfoParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getDesignAssignment_0_0()); }
(rule__Design__DesignAssignment_0_0)
{ after(grammarAccess.getDesignAccess().getDesignAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getDesignAccess().getSubdesignAssignment_0_1()); }
(rule__Design__SubdesignAssignment_0_1)
{ after(grammarAccess.getDesignAccess().getSubdesignAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DesignElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignElementAccess().getConnectionParserRuleCall_0()); }
	ruleConnection
{ after(grammarAccess.getDesignElementAccess().getConnectionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDesignElementAccess().getInstanceParserRuleCall_1()); }
	ruleInstance
{ after(grammarAccess.getDesignElementAccess().getInstanceParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDesignElementAccess().getConnectionAssignParserRuleCall_2()); }
	ruleConnectionAssign
{ after(grammarAccess.getDesignElementAccess().getConnectionAssignParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDesignElementAccess().getInfoParserRuleCall_3()); }
	ruleInfo
{ after(grammarAccess.getDesignElementAccess().getInfoParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_0()); }
(rule__Connection__Group_0__0)
{ after(grammarAccess.getConnectionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getConnectionAccess().getGroup_1()); }
(rule__Connection__Group_1__0)
{ after(grammarAccess.getConnectionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Alternatives_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_0_4_0()); }
(rule__Connection__Group_0_4_0__0)
{ after(grammarAccess.getConnectionAccess().getGroup_0_4_0()); }
)

    |(
{ before(grammarAccess.getConnectionAccess().getSemicolonKeyword_0_4_1()); }

	KEYWORD_8 

{ after(grammarAccess.getConnectionAccess().getSemicolonKeyword_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Alternatives_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_1_4_0()); }
(rule__Connection__Group_1_4_0__0)
{ after(grammarAccess.getConnectionAccess().getGroup_1_4_0()); }
)

    |(
{ before(grammarAccess.getConnectionAccess().getSemicolonKeyword_1_4_1()); }

	KEYWORD_8 

{ after(grammarAccess.getConnectionAccess().getSemicolonKeyword_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NetElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNetElementAccess().getAttrParserRuleCall_0()); }
	ruleAttr
{ after(grammarAccess.getNetElementAccess().getAttrParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNetElementAccess().getInfoParserRuleCall_1()); }
	ruleInfo
{ after(grammarAccess.getNetElementAccess().getInfoParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getGroup_0()); }
(rule__Instance__Group_0__0)
{ after(grammarAccess.getInstanceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInstanceAccess().getGroup_1()); }
(rule__Instance__Group_1__0)
{ after(grammarAccess.getInstanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceElementAccess().getNewAttrParserRuleCall_0()); }
	ruleNewAttr
{ after(grammarAccess.getInstanceElementAccess().getNewAttrParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInstanceElementAccess().getRefAttrParserRuleCall_1()); }
	ruleRefAttr
{ after(grammarAccess.getInstanceElementAccess().getRefAttrParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInstanceElementAccess().getPinAssignParserRuleCall_2()); }
	rulePinAssign
{ after(grammarAccess.getInstanceElementAccess().getPinAssignParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInstanceElementAccess().getInfoParserRuleCall_3()); }
	ruleInfo
{ after(grammarAccess.getInstanceElementAccess().getInfoParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubInstanceElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubInstanceElementAccess().getAttrParserRuleCall_0()); }
	ruleAttr
{ after(grammarAccess.getSubInstanceElementAccess().getAttrParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSubInstanceElementAccess().getSubAttrParserRuleCall_1()); }
	ruleSubAttr
{ after(grammarAccess.getSubInstanceElementAccess().getSubAttrParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSubInstanceElementAccess().getPortAssignParserRuleCall_2()); }
	rulePortAssign
{ after(grammarAccess.getSubInstanceElementAccess().getPortAssignParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSubInstanceElementAccess().getInfoParserRuleCall_3()); }
	ruleInfo
{ after(grammarAccess.getSubInstanceElementAccess().getInfoParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getGroup_0_0()); }
(rule__PinAssign__Group_0_0__0)
{ after(grammarAccess.getPinAssignAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getPinAssignAccess().getGroup_0_1()); }
(rule__PinAssign__Group_0_1__0)
{ after(grammarAccess.getPinAssignAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getGroup_0_0()); }
(rule__PortAssign__Group_0_0__0)
{ after(grammarAccess.getPortAssignAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getPortAssignAccess().getGroup_0_1()); }
(rule__PortAssign__Group_0_1__0)
{ after(grammarAccess.getPortAssignAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getGroup_0()); }
(rule__Concatenation__Group_0__0)
{ after(grammarAccess.getConcatenationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getConcatenationAccess().getGroup_1()); }
(rule__Concatenation__Group_1__0)
{ after(grammarAccess.getConcatenationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getConcatenationAccess().getOpenAssignment_2()); }
(rule__Concatenation__OpenAssignment_2)
{ after(grammarAccess.getConcatenationAccess().getOpenAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getGroup_1_0()); }
(rule__Indices__Group_1_0__0)
{ after(grammarAccess.getIndicesAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getIndicesAccess().getGroup_1_1()); }
(rule__Indices__Group_1_1__0)
{ after(grammarAccess.getIndicesAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getGroup_1_0()); }
(rule__Slices__Group_1_0__0)
{ after(grammarAccess.getSlicesAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSlicesAccess().getGroup_1_1()); }
(rule__Slices__Group_1_1__0)
{ after(grammarAccess.getSlicesAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PhdlID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhdlIDAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getPhdlIDAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPhdlIDAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getPhdlIDAccess().getIDTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPhdlIDAccess().getPINNUMTerminalRuleCall_2()); }
	RULE_PINNUM
{ after(grammarAccess.getPhdlIDAccess().getPINNUMTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinTypeAccess().getPinEnumLiteralDeclaration_0()); }
(	KEYWORD_18
)
{ after(grammarAccess.getPinTypeAccess().getPinEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getInputEnumLiteralDeclaration_1()); }
(	KEYWORD_25
)
{ after(grammarAccess.getPinTypeAccess().getInputEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getOutputEnumLiteralDeclaration_2()); }
(	KEYWORD_33
)
{ after(grammarAccess.getPinTypeAccess().getOutputEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getInOutEnumLiteralDeclaration_3()); }
(	KEYWORD_26
)
{ after(grammarAccess.getPinTypeAccess().getInOutEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getPowerEnumLiteralDeclaration_4()); }
(	KEYWORD_34
)
{ after(grammarAccess.getPinTypeAccess().getPowerEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getSupplyEnumLiteralDeclaration_5()); }
(	KEYWORD_35
)
{ after(grammarAccess.getPinTypeAccess().getSupplyEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getOpenCollectorEnumLiteralDeclaration_6()); }
(	KEYWORD_28
)
{ after(grammarAccess.getPinTypeAccess().getOpenCollectorEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getOpenEmitterEnumLiteralDeclaration_7()); }
(	KEYWORD_29
)
{ after(grammarAccess.getPinTypeAccess().getOpenEmitterEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getTristateEnumLiteralDeclaration_8()); }
(	KEYWORD_36
)
{ after(grammarAccess.getPinTypeAccess().getTristateEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getPassiveEnumLiteralDeclaration_9()); }
(	KEYWORD_40
)
{ after(grammarAccess.getPinTypeAccess().getPassiveEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getPinTypeAccess().getNoConnectEnumLiteralDeclaration_10()); }
(	KEYWORD_27
)
{ after(grammarAccess.getPinTypeAccess().getNoConnectEnumLiteralDeclaration_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PhdlModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhdlModel__Group__0__Impl
	rule__PhdlModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PhdlModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhdlModelAccess().getImportsAssignment_0()); }
(rule__PhdlModel__ImportsAssignment_0)*
{ after(grammarAccess.getPhdlModelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PhdlModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PhdlModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PhdlModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhdlModelAccess().getAlternatives_1()); }
(rule__PhdlModel__Alternatives_1)*
{ after(grammarAccess.getPhdlModelAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }

	KEYWORD_39 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameAssignment_1()); }
(rule__Package__NameAssignment_1)
{ after(grammarAccess.getPackageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }

	KEYWORD_14 

{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getImportsAssignment_3()); }
(rule__Package__ImportsAssignment_3)*
{ after(grammarAccess.getPackageAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getAlternatives_4()); }
(rule__Package__Alternatives_4)*
{ after(grammarAccess.getPackageAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }

	KEYWORD_15 

{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	KEYWORD_32 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	KEYWORD_8 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Device__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Device__Group__0__Impl
	rule__Device__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviceAccess().getDeviceKeyword_0()); }

	KEYWORD_31 

{ after(grammarAccess.getDeviceAccess().getDeviceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Device__Group__1__Impl
	rule__Device__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviceAccess().getNameAssignment_1()); }
(rule__Device__NameAssignment_1)
{ after(grammarAccess.getDeviceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Device__Group__2__Impl
	rule__Device__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviceAccess().getLeftCurlyBracketKeyword_2()); }

	KEYWORD_14 

{ after(grammarAccess.getDeviceAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Device__Group__3__Impl
	rule__Device__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviceAccess().getElementsAssignment_3()); }
(rule__Device__ElementsAssignment_3)*
{ after(grammarAccess.getDeviceAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Device__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviceAccess().getRightCurlyBracketKeyword_4()); }

	KEYWORD_15 

{ after(grammarAccess.getDeviceAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Attr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__0__Impl
	rule__Attr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getAttrKeyword_0()); }

	KEYWORD_19 

{ after(grammarAccess.getAttrAccess().getAttrKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__1__Impl
	rule__Attr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getNameAssignment_1()); }
(rule__Attr__NameAssignment_1)
{ after(grammarAccess.getAttrAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__2__Impl
	rule__Attr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getEqualsSignKeyword_2()); }

	KEYWORD_10 

{ after(grammarAccess.getAttrAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__3__Impl
	rule__Attr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getValueAssignment_3()); }
(rule__Attr__ValueAssignment_3)
{ after(grammarAccess.getAttrAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getSemicolonKeyword_4()); }

	KEYWORD_8 

{ after(grammarAccess.getAttrAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Pin__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group__0__Impl
	rule__Pin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getTypeAssignment_0()); }
(rule__Pin__TypeAssignment_0)
{ after(grammarAccess.getPinAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group__1__Impl
	rule__Pin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getVectorAssignment_1()); }
(rule__Pin__VectorAssignment_1)
{ after(grammarAccess.getPinAccess().getVectorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group__2__Impl
	rule__Pin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getNameAssignment_2()); }
(rule__Pin__NameAssignment_2)
{ after(grammarAccess.getPinAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group__3__Impl
	rule__Pin__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getEqualsSignKeyword_3()); }

	KEYWORD_10 

{ after(grammarAccess.getPinAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group__4__Impl
	rule__Pin__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getLeftCurlyBracketKeyword_4()); }

	KEYWORD_14 

{ after(grammarAccess.getPinAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group__5__Impl
	rule__Pin__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getGroup_5()); }
(rule__Pin__Group_5__0)?
{ after(grammarAccess.getPinAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group__6__Impl
	rule__Pin__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getRightCurlyBracketKeyword_6()); }

	KEYWORD_15 

{ after(grammarAccess.getPinAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getSemicolonKeyword_7()); }

	KEYWORD_8 

{ after(grammarAccess.getPinAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Pin__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group_5__0__Impl
	rule__Pin__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getPinNamesAssignment_5_0()); }
(rule__Pin__PinNamesAssignment_5_0)
{ after(grammarAccess.getPinAccess().getPinNamesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getGroup_5_1()); }
(rule__Pin__Group_5_1__0)*
{ after(grammarAccess.getPinAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pin__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group_5_1__0__Impl
	rule__Pin__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getCommaKeyword_5_1_0()); }

	KEYWORD_5 

{ after(grammarAccess.getPinAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pin__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getPinNamesAssignment_5_1_1()); }
(rule__Pin__PinNamesAssignment_5_1_1)
{ after(grammarAccess.getPinAccess().getPinNamesAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Info__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Info__Group__0__Impl
	rule__Info__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoAccess().getInfoKeyword_0()); }

	KEYWORD_20 

{ after(grammarAccess.getInfoAccess().getInfoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Info__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Info__Group__1__Impl
	rule__Info__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoAccess().getLeftCurlyBracketKeyword_1()); }

	KEYWORD_14 

{ after(grammarAccess.getInfoAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Info__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Info__Group__2__Impl
	rule__Info__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoAccess().getInfoAssignment_2()); }
(rule__Info__InfoAssignment_2)
{ after(grammarAccess.getInfoAccess().getInfoAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Info__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Info__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Info__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoAccess().getRightCurlyBracketKeyword_3()); }

	KEYWORD_15 

{ after(grammarAccess.getInfoAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Design__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__0__Impl
	rule__Design__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getAlternatives_0()); }
(rule__Design__Alternatives_0)
{ after(grammarAccess.getDesignAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__1__Impl
	rule__Design__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getNameAssignment_1()); }
(rule__Design__NameAssignment_1)
{ after(grammarAccess.getDesignAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__2__Impl
	rule__Design__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getLeftCurlyBracketKeyword_2()); }

	KEYWORD_14 

{ after(grammarAccess.getDesignAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__3__Impl
	rule__Design__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getElementsAssignment_3()); }
(rule__Design__ElementsAssignment_3)*
{ after(grammarAccess.getDesignAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getRightCurlyBracketKeyword_4()); }

	KEYWORD_15 

{ after(grammarAccess.getDesignAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Connection__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0__0__Impl
	rule__Connection__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNetAssignment_0_0()); }
(rule__Connection__NetAssignment_0_0)
{ after(grammarAccess.getConnectionAccess().getNetAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0__1__Impl
	rule__Connection__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getVectorAssignment_0_1()); }
(rule__Connection__VectorAssignment_0_1)
{ after(grammarAccess.getConnectionAccess().getVectorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0__2__Impl
	rule__Connection__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNamesAssignment_0_2()); }
(rule__Connection__NamesAssignment_0_2)
{ after(grammarAccess.getConnectionAccess().getNamesAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0__3__Impl
	rule__Connection__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_0_3()); }
(rule__Connection__Group_0_3__0)*
{ after(grammarAccess.getConnectionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getAlternatives_0_4()); }
(rule__Connection__Alternatives_0_4)
{ after(grammarAccess.getConnectionAccess().getAlternatives_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Connection__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0_3__0__Impl
	rule__Connection__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getCommaKeyword_0_3_0()); }

	KEYWORD_5 

{ after(grammarAccess.getConnectionAccess().getCommaKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNamesAssignment_0_3_1()); }
(rule__Connection__NamesAssignment_0_3_1)
{ after(grammarAccess.getConnectionAccess().getNamesAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group_0_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0_4_0__0__Impl
	rule__Connection__Group_0_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_0_4_0_0()); }

	KEYWORD_14 

{ after(grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_0_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_0_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0_4_0__1__Impl
	rule__Connection__Group_0_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getElementsAssignment_0_4_0_1()); }
(rule__Connection__ElementsAssignment_0_4_0_1)*
{ after(grammarAccess.getConnectionAccess().getElementsAssignment_0_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_0_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_0_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_0_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_0_4_0_2()); }

	KEYWORD_15 

{ after(grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_0_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Connection__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1__0__Impl
	rule__Connection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPortAssignment_1_0()); }
(rule__Connection__PortAssignment_1_0)
{ after(grammarAccess.getConnectionAccess().getPortAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1__1__Impl
	rule__Connection__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getVectorAssignment_1_1()); }
(rule__Connection__VectorAssignment_1_1)
{ after(grammarAccess.getConnectionAccess().getVectorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1__2__Impl
	rule__Connection__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNamesAssignment_1_2()); }
(rule__Connection__NamesAssignment_1_2)
{ after(grammarAccess.getConnectionAccess().getNamesAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1__3__Impl
	rule__Connection__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_1_3()); }
(rule__Connection__Group_1_3__0)*
{ after(grammarAccess.getConnectionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getAlternatives_1_4()); }
(rule__Connection__Alternatives_1_4)
{ after(grammarAccess.getConnectionAccess().getAlternatives_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Connection__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1_3__0__Impl
	rule__Connection__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getCommaKeyword_1_3_0()); }

	KEYWORD_5 

{ after(grammarAccess.getConnectionAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNamesAssignment_1_3_1()); }
(rule__Connection__NamesAssignment_1_3_1)
{ after(grammarAccess.getConnectionAccess().getNamesAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group_1_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1_4_0__0__Impl
	rule__Connection__Group_1_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_1_4_0_0()); }

	KEYWORD_14 

{ after(grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_1_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1_4_0__1__Impl
	rule__Connection__Group_1_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getElementsAssignment_1_4_0_1()); }
(rule__Connection__ElementsAssignment_1_4_0_1)*
{ after(grammarAccess.getConnectionAccess().getElementsAssignment_1_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_1_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_1_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_1_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_1_4_0_2()); }

	KEYWORD_15 

{ after(grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_1_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Instance__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_0__0__Impl
	rule__Instance__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getInstAssignment_0_0()); }
(rule__Instance__InstAssignment_0_0)
{ after(grammarAccess.getInstanceAccess().getInstAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_0__1__Impl
	rule__Instance__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getArrayAssignment_0_1()); }
(rule__Instance__ArrayAssignment_0_1)
{ after(grammarAccess.getInstanceAccess().getArrayAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_0__2__Impl
	rule__Instance__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameAssignment_0_2()); }
(rule__Instance__NameAssignment_0_2)
{ after(grammarAccess.getInstanceAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_0__3__Impl
	rule__Instance__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getOfKeyword_0_3()); }

	KEYWORD_16 

{ after(grammarAccess.getInstanceAccess().getOfKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_0__4__Impl
	rule__Instance__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getDeviceAssignment_0_4()); }
(rule__Instance__DeviceAssignment_0_4)
{ after(grammarAccess.getInstanceAccess().getDeviceAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_0__5__Impl
	rule__Instance__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_0_5()); }

	KEYWORD_14 

{ after(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_0__6__Impl
	rule__Instance__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getElementsAssignment_0_6()); }
(rule__Instance__ElementsAssignment_0_6)*
{ after(grammarAccess.getInstanceAccess().getElementsAssignment_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_0_7()); }

	KEYWORD_15 

{ after(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Instance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__0__Impl
	rule__Instance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSubInstAssignment_1_0()); }
(rule__Instance__SubInstAssignment_1_0)
{ after(grammarAccess.getInstanceAccess().getSubInstAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__1__Impl
	rule__Instance__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getArrayAssignment_1_1()); }
(rule__Instance__ArrayAssignment_1_1)
{ after(grammarAccess.getInstanceAccess().getArrayAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__2__Impl
	rule__Instance__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameAssignment_1_2()); }
(rule__Instance__NameAssignment_1_2)
{ after(grammarAccess.getInstanceAccess().getNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__3__Impl
	rule__Instance__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getOfKeyword_1_3()); }

	KEYWORD_16 

{ after(grammarAccess.getInstanceAccess().getOfKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__4__Impl
	rule__Instance__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSubDesignAssignment_1_4()); }
(rule__Instance__SubDesignAssignment_1_4)
{ after(grammarAccess.getInstanceAccess().getSubDesignAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__5__Impl
	rule__Instance__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getPrefixAssignment_1_5()); }
(rule__Instance__PrefixAssignment_1_5)?
{ after(grammarAccess.getInstanceAccess().getPrefixAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__6__Impl
	rule__Instance__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_1_6()); }

	KEYWORD_14 

{ after(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__7__Impl
	rule__Instance__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getElementsAssignment_1_7()); }
(rule__Instance__ElementsAssignment_1_7)*
{ after(grammarAccess.getInstanceAccess().getElementsAssignment_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_1_8()); }

	KEYWORD_15 

{ after(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__RefAttr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAttr__Group__0__Impl
	rule__RefAttr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAttr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAttrAccess().getQualifierAssignment_0()); }
(rule__RefAttr__QualifierAssignment_0)?
{ after(grammarAccess.getRefAttrAccess().getQualifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAttr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAttr__Group__1__Impl
	rule__RefAttr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAttr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAttrAccess().getRefAssignment_1()); }
(rule__RefAttr__RefAssignment_1)
{ after(grammarAccess.getRefAttrAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAttr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAttr__Group__2__Impl
	rule__RefAttr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAttr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAttrAccess().getEqualsSignKeyword_2()); }

	KEYWORD_10 

{ after(grammarAccess.getRefAttrAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAttr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAttr__Group__3__Impl
	rule__RefAttr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAttr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAttrAccess().getValueAssignment_3()); }
(rule__RefAttr__ValueAssignment_3)
{ after(grammarAccess.getRefAttrAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefAttr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefAttr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefAttr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAttrAccess().getSemicolonKeyword_4()); }

	KEYWORD_8 

{ after(grammarAccess.getRefAttrAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NewAttr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewAttr__Group__0__Impl
	rule__NewAttr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getNewattrKeyword_0()); }

	KEYWORD_38 

{ after(grammarAccess.getNewAttrAccess().getNewattrKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewAttr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewAttr__Group__1__Impl
	rule__NewAttr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getQualifierAssignment_1()); }
(rule__NewAttr__QualifierAssignment_1)?
{ after(grammarAccess.getNewAttrAccess().getQualifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewAttr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewAttr__Group__2__Impl
	rule__NewAttr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getNameAssignment_2()); }
(rule__NewAttr__NameAssignment_2)
{ after(grammarAccess.getNewAttrAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewAttr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewAttr__Group__3__Impl
	rule__NewAttr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getEqualsSignKeyword_3()); }

	KEYWORD_10 

{ after(grammarAccess.getNewAttrAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewAttr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewAttr__Group__4__Impl
	rule__NewAttr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getValueAssignment_4()); }
(rule__NewAttr__ValueAssignment_4)
{ after(grammarAccess.getNewAttrAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewAttr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewAttr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getSemicolonKeyword_5()); }

	KEYWORD_8 

{ after(grammarAccess.getNewAttrAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PinAssign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group__0__Impl
	rule__PinAssign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getAlternatives_0()); }
(rule__PinAssign__Alternatives_0)
{ after(grammarAccess.getPinAssignAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group__1__Impl
	rule__PinAssign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getEqualsSignKeyword_1()); }

	KEYWORD_10 

{ after(grammarAccess.getPinAssignAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group__2__Impl
	rule__PinAssign__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getConcatenationAssignment_2()); }
(rule__PinAssign__ConcatenationAssignment_2)
{ after(grammarAccess.getPinAssignAccess().getConcatenationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getSemicolonKeyword_3()); }

	KEYWORD_8 

{ after(grammarAccess.getPinAssignAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PinAssign__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_0__0__Impl
	rule__PinAssign__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getCombinedAssignment_0_0_0()); }
(rule__PinAssign__CombinedAssignment_0_0_0)
{ after(grammarAccess.getPinAssignAccess().getCombinedAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_0__1__Impl
	rule__PinAssign__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getLeftParenthesisKeyword_0_0_1()); }

	KEYWORD_2 

{ after(grammarAccess.getPinAssignAccess().getLeftParenthesisKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_0__2__Impl
	rule__PinAssign__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getQualifierAssignment_0_0_2()); }
(rule__PinAssign__QualifierAssignment_0_0_2)?
{ after(grammarAccess.getPinAssignAccess().getQualifierAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_0__3__Impl
	rule__PinAssign__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getRefAssignment_0_0_3()); }
(rule__PinAssign__RefAssignment_0_0_3)
{ after(grammarAccess.getPinAssignAccess().getRefAssignment_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_0__4__Impl
	rule__PinAssign__Group_0_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getSlicesAssignment_0_0_4()); }
(rule__PinAssign__SlicesAssignment_0_0_4)?
{ after(grammarAccess.getPinAssignAccess().getSlicesAssignment_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group_0_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getRightParenthesisKeyword_0_0_5()); }

	KEYWORD_3 

{ after(grammarAccess.getPinAssignAccess().getRightParenthesisKeyword_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PinAssign__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_1__0__Impl
	rule__PinAssign__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getQualifierAssignment_0_1_0()); }
(rule__PinAssign__QualifierAssignment_0_1_0)?
{ after(grammarAccess.getPinAssignAccess().getQualifierAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_1__1__Impl
	rule__PinAssign__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getRefAssignment_0_1_1()); }
(rule__PinAssign__RefAssignment_0_1_1)
{ after(grammarAccess.getPinAssignAccess().getRefAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PinAssign__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PinAssign__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getSlicesAssignment_0_1_2()); }
(rule__PinAssign__SlicesAssignment_0_1_2)?
{ after(grammarAccess.getPinAssignAccess().getSlicesAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubAttr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAttr__Group__0__Impl
	rule__SubAttr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getQualifierAssignment_0()); }
(rule__SubAttr__QualifierAssignment_0)?
{ after(grammarAccess.getSubAttrAccess().getQualifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAttr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAttr__Group__1__Impl
	rule__SubAttr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getGroup_1()); }
(rule__SubAttr__Group_1__0)
{ after(grammarAccess.getSubAttrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAttr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAttr__Group__2__Impl
	rule__SubAttr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getTailAssignment_2()); }
(rule__SubAttr__TailAssignment_2)
{ after(grammarAccess.getSubAttrAccess().getTailAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAttr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAttr__Group__3__Impl
	rule__SubAttr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getEqualsSignKeyword_3()); }

	KEYWORD_10 

{ after(grammarAccess.getSubAttrAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAttr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAttr__Group__4__Impl
	rule__SubAttr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getValueAssignment_4()); }
(rule__SubAttr__ValueAssignment_4)
{ after(grammarAccess.getSubAttrAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAttr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAttr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getSemicolonKeyword_5()); }

	KEYWORD_8 

{ after(grammarAccess.getSubAttrAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SubAttr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAttr__Group_1__0__Impl
	rule__SubAttr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getRefAssignment_1_0()); }
(rule__SubAttr__RefAssignment_1_0)
{ after(grammarAccess.getSubAttrAccess().getRefAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAttr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAttr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getRefIndicesAssignment_1_1()); }
(rule__SubAttr__RefIndicesAssignment_1_1)?
{ after(grammarAccess.getSubAttrAccess().getRefIndicesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RefTail__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTail__Group__0__Impl
	rule__RefTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTail__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTailAccess().getFullStopKeyword_0()); }

	KEYWORD_6 

{ after(grammarAccess.getRefTailAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefTail__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTail__Group__1__Impl
	rule__RefTail__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTail__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTailAccess().getRefAssignment_1()); }
(rule__RefTail__RefAssignment_1)
{ after(grammarAccess.getRefTailAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefTail__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTail__Group__2__Impl
	rule__RefTail__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTail__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTailAccess().getRefIndicesAssignment_2()); }
(rule__RefTail__RefIndicesAssignment_2)?
{ after(grammarAccess.getRefTailAccess().getRefIndicesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefTail__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTail__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTail__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTailAccess().getTailAssignment_3()); }
(rule__RefTail__TailAssignment_3)?
{ after(grammarAccess.getRefTailAccess().getTailAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PortAssign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group__0__Impl
	rule__PortAssign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getAlternatives_0()); }
(rule__PortAssign__Alternatives_0)
{ after(grammarAccess.getPortAssignAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group__1__Impl
	rule__PortAssign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getEqualsSignKeyword_1()); }

	KEYWORD_10 

{ after(grammarAccess.getPortAssignAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group__2__Impl
	rule__PortAssign__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getConcatenationAssignment_2()); }
(rule__PortAssign__ConcatenationAssignment_2)
{ after(grammarAccess.getPortAssignAccess().getConcatenationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getSemicolonKeyword_3()); }

	KEYWORD_8 

{ after(grammarAccess.getPortAssignAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PortAssign__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_0__0__Impl
	rule__PortAssign__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getCombinedAssignment_0_0_0()); }
(rule__PortAssign__CombinedAssignment_0_0_0)
{ after(grammarAccess.getPortAssignAccess().getCombinedAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_0__1__Impl
	rule__PortAssign__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getLeftParenthesisKeyword_0_0_1()); }

	KEYWORD_2 

{ after(grammarAccess.getPortAssignAccess().getLeftParenthesisKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_0__2__Impl
	rule__PortAssign__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getQualifierAssignment_0_0_2()); }
(rule__PortAssign__QualifierAssignment_0_0_2)?
{ after(grammarAccess.getPortAssignAccess().getQualifierAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_0__3__Impl
	rule__PortAssign__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getRefAssignment_0_0_3()); }
(rule__PortAssign__RefAssignment_0_0_3)
{ after(grammarAccess.getPortAssignAccess().getRefAssignment_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_0__4__Impl
	rule__PortAssign__Group_0_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getSlicesAssignment_0_0_4()); }
(rule__PortAssign__SlicesAssignment_0_0_4)?
{ after(grammarAccess.getPortAssignAccess().getSlicesAssignment_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group_0_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getRightParenthesisKeyword_0_0_5()); }

	KEYWORD_3 

{ after(grammarAccess.getPortAssignAccess().getRightParenthesisKeyword_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PortAssign__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_1__0__Impl
	rule__PortAssign__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getQualifierAssignment_0_1_0()); }
(rule__PortAssign__QualifierAssignment_0_1_0)?
{ after(grammarAccess.getPortAssignAccess().getQualifierAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_1__1__Impl
	rule__PortAssign__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getRefAssignment_0_1_1()); }
(rule__PortAssign__RefAssignment_0_1_1)
{ after(grammarAccess.getPortAssignAccess().getRefAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PortAssign__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PortAssign__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getSlicesAssignment_0_1_2()); }
(rule__PortAssign__SlicesAssignment_0_1_2)?
{ after(grammarAccess.getPortAssignAccess().getSlicesAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConnectionAssign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionAssign__Group__0__Impl
	rule__ConnectionAssign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionAssign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAssignAccess().getRefAssignment_0()); }
(rule__ConnectionAssign__RefAssignment_0)
{ after(grammarAccess.getConnectionAssignAccess().getRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionAssign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionAssign__Group__1__Impl
	rule__ConnectionAssign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionAssign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAssignAccess().getSlicesAssignment_1()); }
(rule__ConnectionAssign__SlicesAssignment_1)?
{ after(grammarAccess.getConnectionAssignAccess().getSlicesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionAssign__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionAssign__Group__2__Impl
	rule__ConnectionAssign__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionAssign__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAssignAccess().getEqualsSignKeyword_2()); }

	KEYWORD_10 

{ after(grammarAccess.getConnectionAssignAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionAssign__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionAssign__Group__3__Impl
	rule__ConnectionAssign__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionAssign__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAssignAccess().getConcatenationAssignment_3()); }
(rule__ConnectionAssign__ConcatenationAssignment_3)
{ after(grammarAccess.getConnectionAssignAccess().getConcatenationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionAssign__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionAssign__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionAssign__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAssignAccess().getSemicolonKeyword_4()); }

	KEYWORD_8 

{ after(grammarAccess.getConnectionAssignAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Concatenation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Concatenation__Group_0__0__Impl
	rule__Concatenation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getConnectionsAssignment_0_0()); }
(rule__Concatenation__ConnectionsAssignment_0_0)
{ after(grammarAccess.getConcatenationAccess().getConnectionsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Concatenation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Concatenation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getGroup_0_1()); }
(rule__Concatenation__Group_0_1__0)*
{ after(grammarAccess.getConcatenationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Concatenation__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Concatenation__Group_0_1__0__Impl
	rule__Concatenation__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getAmpersandKeyword_0_1_0()); }

	KEYWORD_1 

{ after(grammarAccess.getConcatenationAccess().getAmpersandKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Concatenation__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Concatenation__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getConnectionsAssignment_0_1_1()); }
(rule__Concatenation__ConnectionsAssignment_0_1_1)
{ after(grammarAccess.getConcatenationAccess().getConnectionsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Concatenation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Concatenation__Group_1__0__Impl
	rule__Concatenation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getReplicatedAssignment_1_0()); }
(rule__Concatenation__ReplicatedAssignment_1_0)
{ after(grammarAccess.getConcatenationAccess().getReplicatedAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Concatenation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Concatenation__Group_1__1__Impl
	rule__Concatenation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getReplicateAssignment_1_1()); }
(rule__Concatenation__ReplicateAssignment_1_1)
{ after(grammarAccess.getConcatenationAccess().getReplicateAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Concatenation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Concatenation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getGreaterThanSignKeyword_1_2()); }

	KEYWORD_11 

{ after(grammarAccess.getConcatenationAccess().getGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConnectionRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionRef__Group__0__Impl
	rule__ConnectionRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionRefAccess().getRefAssignment_0()); }
(rule__ConnectionRef__RefAssignment_0)
{ after(grammarAccess.getConnectionRefAccess().getRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionRefAccess().getSlicesAssignment_1()); }
(rule__ConnectionRef__SlicesAssignment_1)?
{ after(grammarAccess.getConnectionRefAccess().getSlicesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Indices__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group__0__Impl
	rule__Indices__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getLeftParenthesisKeyword_0()); }

	KEYWORD_2 

{ after(grammarAccess.getIndicesAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indices__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group__1__Impl
	rule__Indices__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getAlternatives_1()); }
(rule__Indices__Alternatives_1)
{ after(grammarAccess.getIndicesAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indices__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getRightParenthesisKeyword_2()); }

	KEYWORD_3 

{ after(grammarAccess.getIndicesAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Indices__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group_1_0__0__Impl
	rule__Indices__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getMsbAssignment_1_0_0()); }
(rule__Indices__MsbAssignment_1_0_0)
{ after(grammarAccess.getIndicesAccess().getMsbAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indices__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group_1_0__1__Impl
	rule__Indices__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getArrayAssignment_1_0_1()); }
(rule__Indices__ArrayAssignment_1_0_1)
{ after(grammarAccess.getIndicesAccess().getArrayAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indices__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getLsbAssignment_1_0_2()); }
(rule__Indices__LsbAssignment_1_0_2)
{ after(grammarAccess.getIndicesAccess().getLsbAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Indices__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group_1_1__0__Impl
	rule__Indices__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getIndicesAssignment_1_1_0()); }
(rule__Indices__IndicesAssignment_1_1_0)
{ after(grammarAccess.getIndicesAccess().getIndicesAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indices__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getGroup_1_1_1()); }
(rule__Indices__Group_1_1_1__0)*
{ after(grammarAccess.getIndicesAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Indices__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group_1_1_1__0__Impl
	rule__Indices__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getCommaKeyword_1_1_1_0()); }

	KEYWORD_5 

{ after(grammarAccess.getIndicesAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indices__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indices__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getIndicesAssignment_1_1_1_1()); }
(rule__Indices__IndicesAssignment_1_1_1_1)
{ after(grammarAccess.getIndicesAccess().getIndicesAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Slices__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group__0__Impl
	rule__Slices__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getLeftSquareBracketKeyword_0()); }

	KEYWORD_12 

{ after(grammarAccess.getSlicesAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slices__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group__1__Impl
	rule__Slices__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getAlternatives_1()); }
(rule__Slices__Alternatives_1)
{ after(grammarAccess.getSlicesAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slices__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getRightSquareBracketKeyword_2()); }

	KEYWORD_13 

{ after(grammarAccess.getSlicesAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Slices__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group_1_0__0__Impl
	rule__Slices__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getMsbAssignment_1_0_0()); }
(rule__Slices__MsbAssignment_1_0_0)
{ after(grammarAccess.getSlicesAccess().getMsbAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slices__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group_1_0__1__Impl
	rule__Slices__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getVectorAssignment_1_0_1()); }
(rule__Slices__VectorAssignment_1_0_1)
{ after(grammarAccess.getSlicesAccess().getVectorAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slices__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getLsbAssignment_1_0_2()); }
(rule__Slices__LsbAssignment_1_0_2)
{ after(grammarAccess.getSlicesAccess().getLsbAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Slices__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group_1_1__0__Impl
	rule__Slices__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getSlicesAssignment_1_1_0()); }
(rule__Slices__SlicesAssignment_1_1_0)
{ after(grammarAccess.getSlicesAccess().getSlicesAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slices__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getGroup_1_1_1()); }
(rule__Slices__Group_1_1_1__0)*
{ after(grammarAccess.getSlicesAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Slices__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group_1_1_1__0__Impl
	rule__Slices__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getCommaKeyword_1_1_1_0()); }

	KEYWORD_5 

{ after(grammarAccess.getSlicesAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slices__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slices__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getSlicesAssignment_1_1_1_1()); }
(rule__Slices__SlicesAssignment_1_1_1_1)
{ after(grammarAccess.getSlicesAccess().getSlicesAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Vector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group__0__Impl
	rule__Vector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getVectorAction_0()); }
(

)
{ after(grammarAccess.getVectorAccess().getVectorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getGroup_1()); }
(rule__Vector__Group_1__0)?
{ after(grammarAccess.getVectorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Vector__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group_1__0__Impl
	rule__Vector__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getLeftSquareBracketKeyword_1_0()); }

	KEYWORD_12 

{ after(grammarAccess.getVectorAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vector__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group_1__1__Impl
	rule__Vector__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getMsbAssignment_1_1()); }
(rule__Vector__MsbAssignment_1_1)
{ after(grammarAccess.getVectorAccess().getMsbAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vector__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group_1__2__Impl
	rule__Vector__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getVectorAssignment_1_2()); }
(rule__Vector__VectorAssignment_1_2)
{ after(grammarAccess.getVectorAccess().getVectorAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vector__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group_1__3__Impl
	rule__Vector__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getLsbAssignment_1_3()); }
(rule__Vector__LsbAssignment_1_3)
{ after(grammarAccess.getVectorAccess().getLsbAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vector__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getRightSquareBracketKeyword_1_4()); }

	KEYWORD_13 

{ after(grammarAccess.getVectorAccess().getRightSquareBracketKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayAction_0()); }
(

)
{ after(grammarAccess.getArrayAccess().getArrayAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_1()); }
(rule__Array__Group_1__0)?
{ after(grammarAccess.getArrayAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_1__0__Impl
	rule__Array__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftParenthesisKeyword_1_0()); }

	KEYWORD_2 

{ after(grammarAccess.getArrayAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_1__1__Impl
	rule__Array__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getMsbAssignment_1_1()); }
(rule__Array__MsbAssignment_1_1)
{ after(grammarAccess.getArrayAccess().getMsbAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_1__2__Impl
	rule__Array__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayAssignment_1_2()); }
(rule__Array__ArrayAssignment_1_2)
{ after(grammarAccess.getArrayAccess().getArrayAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_1__3__Impl
	rule__Array__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLsbAssignment_1_3()); }
(rule__Array__LsbAssignment_1_3)
{ after(grammarAccess.getArrayAccess().getLsbAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightParenthesisKeyword_1_4()); }

	KEYWORD_3 

{ after(grammarAccess.getArrayAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Qualifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qualifier__Group__0__Impl
	rule__Qualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifierAccess().getThisKeyword_0()); }

	KEYWORD_24 

{ after(grammarAccess.getQualifierAccess().getThisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Qualifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qualifier__Group__1__Impl
	rule__Qualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifierAccess().getIndicesAssignment_1()); }
(rule__Qualifier__IndicesAssignment_1)
{ after(grammarAccess.getQualifierAccess().getIndicesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Qualifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Qualifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifierAccess().getFullStopKeyword_2()); }

	KEYWORD_6 

{ after(grammarAccess.getQualifierAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup_1()); }
(rule__QualifiedNameWithWildCard__Group_1__0)?
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildCard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group_1__0__Impl
	rule__QualifiedNameWithWildCard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); }

	KEYWORD_6 

{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); }

	KEYWORD_4 

{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getPhdlIDParserRuleCall_0()); }
	rulePhdlID
{ after(grammarAccess.getQualifiedNameAccess().getPhdlIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)?
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	KEYWORD_6 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getPhdlIDParserRuleCall_1_1()); }
	rulePhdlID
{ after(grammarAccess.getQualifiedNameAccess().getPhdlIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__PhdlModel__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhdlModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getPhdlModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhdlModel__PackagesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhdlModelAccess().getPackagesPackageParserRuleCall_1_0_0()); }
	rulePackage{ after(grammarAccess.getPhdlModelAccess().getPackagesPackageParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhdlModel__DevicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhdlModelAccess().getDevicesDeviceParserRuleCall_1_1_0()); }
	ruleDevice{ after(grammarAccess.getPhdlModelAccess().getDevicesDeviceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PhdlModel__DesignsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPhdlModelAccess().getDesignsDesignParserRuleCall_1_2_0()); }
	ruleDesign{ after(grammarAccess.getPhdlModelAccess().getDesignsDesignParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getPackageAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__DevicesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getDevicesDeviceParserRuleCall_4_0_0()); }
	ruleDevice{ after(grammarAccess.getPackageAccess().getDevicesDeviceParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__DesignsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getDesignsDesignParserRuleCall_4_1_0()); }
	ruleDesign{ after(grammarAccess.getPackageAccess().getDesignsDesignParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildCard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Device__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviceAccess().getNamePhdlIDParserRuleCall_1_0()); }
	rulePhdlID{ after(grammarAccess.getDeviceAccess().getNamePhdlIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Device__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeviceAccess().getElementsDeviceElementParserRuleCall_3_0()); }
	ruleDeviceElement{ after(grammarAccess.getDeviceAccess().getElementsDeviceElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttrAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getAttrAccess().getValueSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getTypePinTypeEnumRuleCall_0_0()); }
	rulePinType{ after(grammarAccess.getPinAccess().getTypePinTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__VectorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getVectorVectorParserRuleCall_1_0()); }
	ruleVector{ after(grammarAccess.getPinAccess().getVectorVectorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getNamePhdlIDParserRuleCall_2_0()); }
	rulePhdlID{ after(grammarAccess.getPinAccess().getNamePhdlIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__PinNamesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getPinNamesPhdlIDParserRuleCall_5_0_0()); }
	rulePhdlID{ after(grammarAccess.getPinAccess().getPinNamesPhdlIDParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__PinNamesAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAccess().getPinNamesPhdlIDParserRuleCall_5_1_1_0()); }
	rulePhdlID{ after(grammarAccess.getPinAccess().getPinNamesPhdlIDParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Info__InfoAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoAccess().getInfoSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getInfoAccess().getInfoSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__DesignAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getDesignDesignKeyword_0_0_0()); }
(
{ before(grammarAccess.getDesignAccess().getDesignDesignKeyword_0_0_0()); }

	KEYWORD_30 

{ after(grammarAccess.getDesignAccess().getDesignDesignKeyword_0_0_0()); }
)

{ after(grammarAccess.getDesignAccess().getDesignDesignKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__SubdesignAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getSubdesignSubdesignKeyword_0_1_0()); }
(
{ before(grammarAccess.getDesignAccess().getSubdesignSubdesignKeyword_0_1_0()); }

	KEYWORD_42 

{ after(grammarAccess.getDesignAccess().getSubdesignSubdesignKeyword_0_1_0()); }
)

{ after(grammarAccess.getDesignAccess().getSubdesignSubdesignKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDesignAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getElementsDesignElementParserRuleCall_3_0()); }
	ruleDesignElement{ after(grammarAccess.getDesignAccess().getElementsDesignElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NetAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNetNetKeyword_0_0_0()); }
(
{ before(grammarAccess.getConnectionAccess().getNetNetKeyword_0_0_0()); }

	KEYWORD_17 

{ after(grammarAccess.getConnectionAccess().getNetNetKeyword_0_0_0()); }
)

{ after(grammarAccess.getConnectionAccess().getNetNetKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__VectorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getVectorVectorParserRuleCall_0_1_0()); }
	ruleVector{ after(grammarAccess.getConnectionAccess().getVectorVectorParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NamesAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_0_2_0()); }
	ruleConnectionName{ after(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NamesAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_0_3_1_0()); }
	ruleConnectionName{ after(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__ElementsAssignment_0_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getElementsNetElementParserRuleCall_0_4_0_1_0()); }
	ruleNetElement{ after(grammarAccess.getConnectionAccess().getElementsNetElementParserRuleCall_0_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__PortAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPortPortKeyword_1_0_0()); }
(
{ before(grammarAccess.getConnectionAccess().getPortPortKeyword_1_0_0()); }

	KEYWORD_23 

{ after(grammarAccess.getConnectionAccess().getPortPortKeyword_1_0_0()); }
)

{ after(grammarAccess.getConnectionAccess().getPortPortKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__VectorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getVectorVectorParserRuleCall_1_1_0()); }
	ruleVector{ after(grammarAccess.getConnectionAccess().getVectorVectorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NamesAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_1_2_0()); }
	ruleConnectionName{ after(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NamesAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_1_3_1_0()); }
	ruleConnectionName{ after(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__ElementsAssignment_1_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getElementsPortElementParserRuleCall_1_4_0_1_0()); }
	rulePortElement{ after(grammarAccess.getConnectionAccess().getElementsPortElementParserRuleCall_1_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__InstAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getInstInstKeyword_0_0_0()); }
(
{ before(grammarAccess.getInstanceAccess().getInstInstKeyword_0_0_0()); }

	KEYWORD_21 

{ after(grammarAccess.getInstanceAccess().getInstInstKeyword_0_0_0()); }
)

{ after(grammarAccess.getInstanceAccess().getInstInstKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__ArrayAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getArrayArrayParserRuleCall_0_1_0()); }
	ruleArray{ after(grammarAccess.getInstanceAccess().getArrayArrayParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__DeviceAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getDeviceDeviceCrossReference_0_4_0()); }
(
{ before(grammarAccess.getInstanceAccess().getDeviceDeviceQualifiedNameParserRuleCall_0_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getInstanceAccess().getDeviceDeviceQualifiedNameParserRuleCall_0_4_0_1()); }
)
{ after(grammarAccess.getInstanceAccess().getDeviceDeviceCrossReference_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__ElementsAssignment_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getElementsInstanceElementParserRuleCall_0_6_0()); }
	ruleInstanceElement{ after(grammarAccess.getInstanceAccess().getElementsInstanceElementParserRuleCall_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__SubInstAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSubInstSubinstKeyword_1_0_0()); }
(
{ before(grammarAccess.getInstanceAccess().getSubInstSubinstKeyword_1_0_0()); }

	KEYWORD_41 

{ after(grammarAccess.getInstanceAccess().getSubInstSubinstKeyword_1_0_0()); }
)

{ after(grammarAccess.getInstanceAccess().getSubInstSubinstKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__ArrayAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getArrayArrayParserRuleCall_1_1_0()); }
	ruleArray{ after(grammarAccess.getInstanceAccess().getArrayArrayParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__SubDesignAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSubDesignDesignCrossReference_1_4_0()); }
(
{ before(grammarAccess.getInstanceAccess().getSubDesignDesignQualifiedNameParserRuleCall_1_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getInstanceAccess().getSubDesignDesignQualifiedNameParserRuleCall_1_4_0_1()); }
)
{ after(grammarAccess.getInstanceAccess().getSubDesignDesignCrossReference_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__PrefixAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getPrefixSTRINGTerminalRuleCall_1_5_0()); }
	RULE_STRING{ after(grammarAccess.getInstanceAccess().getPrefixSTRINGTerminalRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__ElementsAssignment_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getElementsSubInstanceElementParserRuleCall_1_7_0()); }
	ruleSubInstanceElement{ after(grammarAccess.getInstanceAccess().getElementsSubInstanceElementParserRuleCall_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefAttr__QualifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAttrAccess().getQualifierQualifierParserRuleCall_0_0()); }
	ruleQualifier{ after(grammarAccess.getRefAttrAccess().getQualifierQualifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefAttr__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAttrAccess().getRefAttrCrossReference_1_0()); }
(
{ before(grammarAccess.getRefAttrAccess().getRefAttrIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRefAttrAccess().getRefAttrIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRefAttrAccess().getRefAttrCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefAttr__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAttrAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getRefAttrAccess().getValueSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__QualifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getQualifierQualifierParserRuleCall_1_0()); }
	ruleQualifier{ after(grammarAccess.getNewAttrAccess().getQualifierQualifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getNewAttrAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewAttr__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAttrAccess().getValueSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getNewAttrAccess().getValueSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__CombinedAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getCombinedCombineKeyword_0_0_0_0()); }
(
{ before(grammarAccess.getPinAssignAccess().getCombinedCombineKeyword_0_0_0_0()); }

	KEYWORD_37 

{ after(grammarAccess.getPinAssignAccess().getCombinedCombineKeyword_0_0_0_0()); }
)

{ after(grammarAccess.getPinAssignAccess().getCombinedCombineKeyword_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__QualifierAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getQualifierQualifierParserRuleCall_0_0_2_0()); }
	ruleQualifier{ after(grammarAccess.getPinAssignAccess().getQualifierQualifierParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__RefAssignment_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getRefPinCrossReference_0_0_3_0()); }
(
{ before(grammarAccess.getPinAssignAccess().getRefPinPhdlIDParserRuleCall_0_0_3_0_1()); }
	rulePhdlID{ after(grammarAccess.getPinAssignAccess().getRefPinPhdlIDParserRuleCall_0_0_3_0_1()); }
)
{ after(grammarAccess.getPinAssignAccess().getRefPinCrossReference_0_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__SlicesAssignment_0_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getSlicesSlicesParserRuleCall_0_0_4_0()); }
	ruleSlices{ after(grammarAccess.getPinAssignAccess().getSlicesSlicesParserRuleCall_0_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__QualifierAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getQualifierQualifierParserRuleCall_0_1_0_0()); }
	ruleQualifier{ after(grammarAccess.getPinAssignAccess().getQualifierQualifierParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__RefAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getRefPinCrossReference_0_1_1_0()); }
(
{ before(grammarAccess.getPinAssignAccess().getRefPinPhdlIDParserRuleCall_0_1_1_0_1()); }
	rulePhdlID{ after(grammarAccess.getPinAssignAccess().getRefPinPhdlIDParserRuleCall_0_1_1_0_1()); }
)
{ after(grammarAccess.getPinAssignAccess().getRefPinCrossReference_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__SlicesAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getSlicesSlicesParserRuleCall_0_1_2_0()); }
	ruleSlices{ after(grammarAccess.getPinAssignAccess().getSlicesSlicesParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PinAssign__ConcatenationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPinAssignAccess().getConcatenationConcatenationParserRuleCall_2_0()); }
	ruleConcatenation{ after(grammarAccess.getPinAssignAccess().getConcatenationConcatenationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__QualifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getQualifierQualifierParserRuleCall_0_0()); }
	ruleQualifier{ after(grammarAccess.getSubAttrAccess().getQualifierQualifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__RefAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getRefReferenceableCrossReference_1_0_0()); }
(
{ before(grammarAccess.getSubAttrAccess().getRefReferenceableIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSubAttrAccess().getRefReferenceableIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getSubAttrAccess().getRefReferenceableCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__RefIndicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getRefIndicesIndicesParserRuleCall_1_1_0()); }
	ruleIndices{ after(grammarAccess.getSubAttrAccess().getRefIndicesIndicesParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__TailAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getTailRefTailParserRuleCall_2_0()); }
	ruleRefTail{ after(grammarAccess.getSubAttrAccess().getTailRefTailParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubAttr__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAttrAccess().getValueSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getSubAttrAccess().getValueSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefTail__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTailAccess().getRefReferenceableCrossReference_1_0()); }
(
{ before(grammarAccess.getRefTailAccess().getRefReferenceableIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRefTailAccess().getRefReferenceableIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRefTailAccess().getRefReferenceableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefTail__RefIndicesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTailAccess().getRefIndicesIndicesParserRuleCall_2_0()); }
	ruleIndices{ after(grammarAccess.getRefTailAccess().getRefIndicesIndicesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefTail__TailAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTailAccess().getTailRefTailParserRuleCall_3_0()); }
	ruleRefTail{ after(grammarAccess.getRefTailAccess().getTailRefTailParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__CombinedAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getCombinedCombineKeyword_0_0_0_0()); }
(
{ before(grammarAccess.getPortAssignAccess().getCombinedCombineKeyword_0_0_0_0()); }

	KEYWORD_37 

{ after(grammarAccess.getPortAssignAccess().getCombinedCombineKeyword_0_0_0_0()); }
)

{ after(grammarAccess.getPortAssignAccess().getCombinedCombineKeyword_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__QualifierAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getQualifierQualifierParserRuleCall_0_0_2_0()); }
	ruleQualifier{ after(grammarAccess.getPortAssignAccess().getQualifierQualifierParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__RefAssignment_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getRefConnectionNameCrossReference_0_0_3_0()); }
(
{ before(grammarAccess.getPortAssignAccess().getRefConnectionNamePhdlIDParserRuleCall_0_0_3_0_1()); }
	rulePhdlID{ after(grammarAccess.getPortAssignAccess().getRefConnectionNamePhdlIDParserRuleCall_0_0_3_0_1()); }
)
{ after(grammarAccess.getPortAssignAccess().getRefConnectionNameCrossReference_0_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__SlicesAssignment_0_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getSlicesSlicesParserRuleCall_0_0_4_0()); }
	ruleSlices{ after(grammarAccess.getPortAssignAccess().getSlicesSlicesParserRuleCall_0_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__QualifierAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getQualifierQualifierParserRuleCall_0_1_0_0()); }
	ruleQualifier{ after(grammarAccess.getPortAssignAccess().getQualifierQualifierParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__RefAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getRefConnectionNameCrossReference_0_1_1_0()); }
(
{ before(grammarAccess.getPortAssignAccess().getRefConnectionNamePhdlIDParserRuleCall_0_1_1_0_1()); }
	rulePhdlID{ after(grammarAccess.getPortAssignAccess().getRefConnectionNamePhdlIDParserRuleCall_0_1_1_0_1()); }
)
{ after(grammarAccess.getPortAssignAccess().getRefConnectionNameCrossReference_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__SlicesAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getSlicesSlicesParserRuleCall_0_1_2_0()); }
	ruleSlices{ after(grammarAccess.getPortAssignAccess().getSlicesSlicesParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortAssign__ConcatenationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAssignAccess().getConcatenationConcatenationParserRuleCall_2_0()); }
	ruleConcatenation{ after(grammarAccess.getPortAssignAccess().getConcatenationConcatenationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionAssign__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAssignAccess().getRefConnectionNameCrossReference_0_0()); }
(
{ before(grammarAccess.getConnectionAssignAccess().getRefConnectionNamePhdlIDParserRuleCall_0_0_1()); }
	rulePhdlID{ after(grammarAccess.getConnectionAssignAccess().getRefConnectionNamePhdlIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getConnectionAssignAccess().getRefConnectionNameCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionAssign__SlicesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAssignAccess().getSlicesSlicesParserRuleCall_1_0()); }
	ruleSlices{ after(grammarAccess.getConnectionAssignAccess().getSlicesSlicesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionAssign__ConcatenationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAssignAccess().getConcatenationConcatenationParserRuleCall_3_0()); }
	ruleConcatenation{ after(grammarAccess.getConnectionAssignAccess().getConcatenationConcatenationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__ConnectionsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getConnectionsConnectionRefParserRuleCall_0_0_0()); }
	ruleConnectionRef{ after(grammarAccess.getConcatenationAccess().getConnectionsConnectionRefParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__ConnectionsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getConnectionsConnectionRefParserRuleCall_0_1_1_0()); }
	ruleConnectionRef{ after(grammarAccess.getConcatenationAccess().getConnectionsConnectionRefParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__ReplicatedAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getReplicatedLessThanSignKeyword_1_0_0()); }
(
{ before(grammarAccess.getConcatenationAccess().getReplicatedLessThanSignKeyword_1_0_0()); }

	KEYWORD_9 

{ after(grammarAccess.getConcatenationAccess().getReplicatedLessThanSignKeyword_1_0_0()); }
)

{ after(grammarAccess.getConcatenationAccess().getReplicatedLessThanSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__ReplicateAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getReplicateConnectionRefParserRuleCall_1_1_0()); }
	ruleConnectionRef{ after(grammarAccess.getConcatenationAccess().getReplicateConnectionRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Concatenation__OpenAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatenationAccess().getOpenOpenKeyword_2_0()); }
(
{ before(grammarAccess.getConcatenationAccess().getOpenOpenKeyword_2_0()); }

	KEYWORD_22 

{ after(grammarAccess.getConcatenationAccess().getOpenOpenKeyword_2_0()); }
)

{ after(grammarAccess.getConcatenationAccess().getOpenOpenKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionRef__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionRefAccess().getRefConnectionNameCrossReference_0_0()); }
(
{ before(grammarAccess.getConnectionRefAccess().getRefConnectionNamePhdlIDParserRuleCall_0_0_1()); }
	rulePhdlID{ after(grammarAccess.getConnectionRefAccess().getRefConnectionNamePhdlIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getConnectionRefAccess().getRefConnectionNameCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionRef__SlicesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionRefAccess().getSlicesSlicesParserRuleCall_1_0()); }
	ruleSlices{ after(grammarAccess.getConnectionRefAccess().getSlicesSlicesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionNameAccess().getNamePhdlIDParserRuleCall_0()); }
	rulePhdlID{ after(grammarAccess.getConnectionNameAccess().getNamePhdlIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__MsbAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getMsbINTTerminalRuleCall_1_0_0_0()); }
	RULE_INT{ after(grammarAccess.getIndicesAccess().getMsbINTTerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__ArrayAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getArrayColonKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getIndicesAccess().getArrayColonKeyword_1_0_1_0()); }

	KEYWORD_7 

{ after(grammarAccess.getIndicesAccess().getArrayColonKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getIndicesAccess().getArrayColonKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__LsbAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getLsbINTTerminalRuleCall_1_0_2_0()); }
	RULE_INT{ after(grammarAccess.getIndicesAccess().getLsbINTTerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__IndicesAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getIndicesINTTerminalRuleCall_1_1_0_0()); }
	RULE_INT{ after(grammarAccess.getIndicesAccess().getIndicesINTTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Indices__IndicesAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndicesAccess().getIndicesINTTerminalRuleCall_1_1_1_1_0()); }
	RULE_INT{ after(grammarAccess.getIndicesAccess().getIndicesINTTerminalRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__MsbAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getMsbINTTerminalRuleCall_1_0_0_0()); }
	RULE_INT{ after(grammarAccess.getSlicesAccess().getMsbINTTerminalRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__VectorAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getVectorColonKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getSlicesAccess().getVectorColonKeyword_1_0_1_0()); }

	KEYWORD_7 

{ after(grammarAccess.getSlicesAccess().getVectorColonKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getSlicesAccess().getVectorColonKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__LsbAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getLsbINTTerminalRuleCall_1_0_2_0()); }
	RULE_INT{ after(grammarAccess.getSlicesAccess().getLsbINTTerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__SlicesAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getSlicesINTTerminalRuleCall_1_1_0_0()); }
	RULE_INT{ after(grammarAccess.getSlicesAccess().getSlicesINTTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slices__SlicesAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlicesAccess().getSlicesINTTerminalRuleCall_1_1_1_1_0()); }
	RULE_INT{ after(grammarAccess.getSlicesAccess().getSlicesINTTerminalRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__MsbAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getMsbINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getVectorAccess().getMsbINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__VectorAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getVectorColonKeyword_1_2_0()); }
(
{ before(grammarAccess.getVectorAccess().getVectorColonKeyword_1_2_0()); }

	KEYWORD_7 

{ after(grammarAccess.getVectorAccess().getVectorColonKeyword_1_2_0()); }
)

{ after(grammarAccess.getVectorAccess().getVectorColonKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__LsbAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getLsbINTTerminalRuleCall_1_3_0()); }
	RULE_INT{ after(grammarAccess.getVectorAccess().getLsbINTTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__MsbAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getMsbINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getArrayAccess().getMsbINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ArrayAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayColonKeyword_1_2_0()); }
(
{ before(grammarAccess.getArrayAccess().getArrayColonKeyword_1_2_0()); }

	KEYWORD_7 

{ after(grammarAccess.getArrayAccess().getArrayColonKeyword_1_2_0()); }
)

{ after(grammarAccess.getArrayAccess().getArrayColonKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__LsbAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLsbINTTerminalRuleCall_1_3_0()); }
	RULE_INT{ after(grammarAccess.getArrayAccess().getLsbINTTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Qualifier__IndicesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifierAccess().getIndicesIndicesParserRuleCall_1_0()); }
	ruleIndices{ after(grammarAccess.getQualifierAccess().getIndicesIndicesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



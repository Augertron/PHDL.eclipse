/*
 * generated by Xtext
 */
package edu.byu.ee.phdl.ui;

import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.linking.ILinkingDiagnosticMessageProvider;
import org.eclipse.xtext.ui.editor.autoedit.AbstractEditStrategyProvider;
import org.eclipse.xtext.ui.editor.contentassist.ContentProposalLabelProvider;
import org.eclipse.xtext.ui.editor.contentassist.XtextContentAssistProcessor;
import org.eclipse.xtext.ui.editor.hover.IEObjectHoverProvider;
import org.eclipse.xtext.ui.editor.outline.actions.IOutlineContribution;

import com.google.inject.Binder;
import com.google.inject.name.Names;

import edu.byu.ee.phdl.ui.editor.autoedit.PhdlAutoEditStrategyProvider;
import edu.byu.ee.phdl.ui.hover.PhdlEObjectHoverProvider;
import edu.byu.ee.phdl.ui.labeling.PhdlLabelProvider;
import edu.byu.ee.phdl.ui.linking.PhdlLinkingDiagnosticMessageProvider;
import edu.byu.ee.phdl.ui.outline.ExpandToggleOutlineContribution;
import edu.byu.ee.phdl.ui.outline.FilterDesignsContribution;
import edu.byu.ee.phdl.ui.outline.FilterDevicesContribution;
import edu.byu.ee.phdl.ui.outline.FilterImportsContribution;
import edu.byu.ee.phdl.ui.outline.FilterPackagesContribution;
import edu.byu.ee.phdl.ui.outline.FilterSubdesignsContribution;

/**
 * Use this class to register components to be used within the IDE.
 */
public class PhdlUiModule extends edu.byu.ee.phdl.ui.AbstractPhdlUiModule {
	public PhdlUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}

	@Override
	public Class<? extends AbstractEditStrategyProvider> bindAbstractEditStrategyProvider() {
		return PhdlAutoEditStrategyProvider.class;
	}

	public Class<? extends IEObjectHoverProvider> bindIEObjectHoverProvider() {
		return PhdlEObjectHoverProvider.class;
	}

	public Class<? extends ILinkingDiagnosticMessageProvider> bindILinkingDiagnosticMessageProvider() {
		return PhdlLinkingDiagnosticMessageProvider.class;
	}

	@Override
	public void configure(Binder binder) {
		super.configure(binder);
		binder.bind(String.class).annotatedWith(Names.named(XtextContentAssistProcessor.COMPLETION_AUTO_ACTIVATION_CHARS))
				.toInstance(".={[");
		binder.bind(String.class).annotatedWith(Names.named(XtextContentAssistProcessor.CONTEXT_INFO_AUTO_ACTIVATION_CHARS))
				.toInstance(".={[");
	}

	@Override
	public void configureContentProposalLabelProvider(Binder binder) {
		binder.bind(ILabelProvider.class).annotatedWith(ContentProposalLabelProvider.class).to(PhdlLabelProvider.class);
	}

	public void configureFilterDesignsContribution(Binder binder) {
		binder.bind(IOutlineContribution.class).annotatedWith(Names.named("FilterDesignsContribution")).to(FilterDesignsContribution.class);
	}

	public void configureFilterDevicesContribution(Binder binder) {
		binder.bind(IOutlineContribution.class).annotatedWith(Names.named("FilterDevicesContribution")).to(FilterDevicesContribution.class);
	}

	public void configureFilterImportsContribution(Binder binder) {
		binder.bind(IOutlineContribution.class).annotatedWith(Names.named("FilterImportsContribution")).to(FilterImportsContribution.class);
	}

	public void configureFilterPackagesContribution(Binder binder) {
		binder.bind(IOutlineContribution.class).annotatedWith(Names.named("FilterPackagesContribution"))
				.to(FilterPackagesContribution.class);
	}

	public void configureFilterSubdesignsContribution(Binder binder) {
		binder.bind(IOutlineContribution.class).annotatedWith(Names.named("FilterSubdesignsContribution"))
				.to(FilterSubdesignsContribution.class);
	}

	public void configurePhdlToggleOutlineContribution(Binder binder) {
		binder.bind(IOutlineContribution.class).annotatedWith(Names.named("PhdlToggleOutlineC")).to(ExpandToggleOutlineContribution.class);
	}

	// public void configureIOutlineContribution$Hierarchy(Binder binder) {
	// binder.bind(IPreferenceStoreInitializer.class).annotatedWith(IOutlineContribution.All.class)
	// .to(IOutlineContribution.Composite.class);
	// }
}

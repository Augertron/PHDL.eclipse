subdesign scalar {
	port a;
}

subdesign vector {
	port[4:1] b;
}

design test {

	net a;
	net[4:1] b;

	// test scalar to concatenated scalar width mismatch
	subinst scalar1 of scalar {
		a = a & a;
	}
	
	// test scalar to vector width mismatch
	subinst scalar2 of scalar {
		a = b;
	}
	
	// test vector to scalar width mismatch
	subinst vector1 of vector {
		b = a;
	}
	
	// test vector to concatenated vector width mismatch
	subinst vector2 of vector {
		b = b[2:1] & b[3];
	}
	
	// test scalar to concatenated scalare width mismatch
	subinst(4:1) scalar3 of scalar {
		a = a & a;
	}
	
	// test scalar to vector width mismatch in instance array
	subinst(4:1) scalar4 of scalar {
		a = b;
	}
	
	// test vector to scalar width mismatch in instance array
	subinst(4:1) vector3 of vector {
		b = a;
	}
	
	// test vector to concatenated vector width mismatch in instance array
	subinst(4:1) vector4 of vector {
		b = b[2:1] & b[4];
	}
	
	// test combined scalar to scalar mismatch in instance array
	subinst(4:1) scalar5 of scalar {
		combine(a) = a;
	}
	
	// test combined scalar to vector mismatch in instance array
	subinst(4:1) scalar6 of scalar {
		combine(a) = b[3,2,1];
	}
	
	// test combined vector to scalar mismatch in instance array
	subinst(4:1) vector5 of vector {
		combine(b) = a;
	}
	
	// test combined vector to concatenated vector mismatch in instance array
	subinst(4:1) vector6 of vector {
		combine(b) = b;
	}
	
	// test combined and qualified scalar to scalar mismatch in instance array
	subinst(4:1) scalar7 of scalar {
		combine(this(4,2,3,1).a) = a;
	}
	
	// test combined and qualified scalar to vector mismatch in instance array
	subinst(4:1) scalar8 of scalar {
		combine(this(4:1).a) = b;
	}
	
	// test combined and qualified vector to scalar mismatch in instance array
	subinst(4:1) vector7 of vector {
		combine(this(1,2,4,3).b) = a;
	}
	
	// test combined and qualified vector to vector mismatch in instance array
	subinst(4:1) vector8 of vector {
		combine(this(1:4).b) = b[3:1];
	}
}
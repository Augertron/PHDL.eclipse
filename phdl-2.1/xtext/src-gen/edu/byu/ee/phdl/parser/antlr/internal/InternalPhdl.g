/*
* generated by Xtext
*/
grammar InternalPhdl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package edu.byu.ee.phdl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.byu.ee.phdl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.byu.ee.phdl.services.PhdlGrammarAccess;

}

@parser::members {

 	private PhdlGrammarAccess grammarAccess;
 	
    public InternalPhdlParser(TokenStream input, PhdlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "PhdlModel";	
   	}
   	
   	@Override
   	protected PhdlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulePhdlModel
entryRulePhdlModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPhdlModelRule()); }
	 iv_rulePhdlModel=rulePhdlModel 
	 { $current=$iv_rulePhdlModel.current; } 
	 EOF 
;

// Rule PhdlModel
rulePhdlModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPhdlModelAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhdlModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getPhdlModelAccess().getPackagesPackageParserRuleCall_1_0_0()); 
	    }
		lv_packages_1_0=rulePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhdlModelRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_1_0, 
        		"Package");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPhdlModelAccess().getDevicesDeviceParserRuleCall_1_1_0()); 
	    }
		lv_devices_2_0=ruleDevice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhdlModelRule());
	        }
       		add(
       			$current, 
       			"devices",
        		lv_devices_2_0, 
        		"Device");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPhdlModelAccess().getDesignsDesignParserRuleCall_1_2_0()); 
	    }
		lv_designs_3_0=ruleDesign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhdlModelRule());
	        }
       		add(
       			$current, 
       			"designs",
        		lv_designs_3_0, 
        		"Design");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	 iv_rulePackage=rulePackage 
	 { $current=$iv_rulePackage.current; } 
	 EOF 
;

// Rule Package
rulePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getPackageKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getImportsImportParserRuleCall_3_0()); 
	    }
		lv_imports_3_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_3_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getDevicesDeviceParserRuleCall_4_0_0()); 
	    }
		lv_devices_4_0=ruleDevice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"devices",
        		lv_devices_4_0, 
        		"Device");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getDesignsDesignParserRuleCall_4_1_0()); 
	    }
		lv_designs_5_0=ruleDesign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"designs",
        		lv_designs_5_0, 
        		"Design");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildCard");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	 iv_ruleDevice=ruleDevice 
	 { $current=$iv_ruleDevice.current; } 
	 EOF 
;

// Rule Device
ruleDevice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='device' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeviceAccess().getDeviceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getNamePhdlIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=rulePhdlID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"PhdlID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeviceAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getElementsDeviceElementParserRuleCall_3_0()); 
	    }
		lv_elements_3_0=ruleDeviceElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"DeviceElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDeviceAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDeviceElement
entryRuleDeviceElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceElementRule()); }
	 iv_ruleDeviceElement=ruleDeviceElement 
	 { $current=$iv_ruleDeviceElement.current; } 
	 EOF 
;

// Rule DeviceElement
ruleDeviceElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDeviceElementAccess().getAttrParserRuleCall_0()); 
    }
    this_Attr_0=ruleAttr
    { 
        $current = $this_Attr_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeviceElementAccess().getPinParserRuleCall_1()); 
    }
    this_Pin_1=rulePin
    { 
        $current = $this_Pin_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeviceElementAccess().getInfoParserRuleCall_2()); 
    }
    this_Info_2=ruleInfo
    { 
        $current = $this_Info_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttr
entryRuleAttr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrRule()); }
	 iv_ruleAttr=ruleAttr 
	 { $current=$iv_ruleAttr.current; } 
	 EOF 
;

// Rule Attr
ruleAttr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attr' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttrAccess().getAttrKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttrAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttrAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getAttrAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttrAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRulePin
entryRulePin returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPinRule()); }
	 iv_rulePin=rulePin 
	 { $current=$iv_rulePin.current; } 
	 EOF 
;

// Rule Pin
rulePin returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPinAccess().getTypePinTypeEnumRuleCall_0_0()); 
	    }
		lv_type_0_0=rulePinType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"PinType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPinAccess().getVectorVectorParserRuleCall_1_0()); 
	    }
		lv_vector_1_0=ruleVector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinRule());
	        }
       		set(
       			$current, 
       			"vector",
        		lv_vector_1_0, 
        		"Vector");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPinAccess().getNamePhdlIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=rulePhdlID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"PhdlID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPinAccess().getEqualsSignKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPinAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPinAccess().getPinNamesPhdlIDParserRuleCall_5_0_0()); 
	    }
		lv_pinNames_5_0=rulePhdlID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinRule());
	        }
       		add(
       			$current, 
       			"pinNames",
        		lv_pinNames_5_0, 
        		"PhdlID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPinAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPinAccess().getPinNamesPhdlIDParserRuleCall_5_1_1_0()); 
	    }
		lv_pinNames_7_0=rulePhdlID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinRule());
	        }
       		add(
       			$current, 
       			"pinNames",
        		lv_pinNames_7_0, 
        		"PhdlID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPinAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPinAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleInfo
entryRuleInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfoRule()); }
	 iv_ruleInfo=ruleInfo 
	 { $current=$iv_ruleInfo.current; } 
	 EOF 
;

// Rule Info
ruleInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='info' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInfoAccess().getInfoKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInfoAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		lv_info_2_0=RULE_STRING
		{
			newLeafNode(lv_info_2_0, grammarAccess.getInfoAccess().getInfoSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"info",
        		lv_info_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInfoAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleDesign
entryRuleDesign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesignRule()); }
	 iv_ruleDesign=ruleDesign 
	 { $current=$iv_ruleDesign.current; } 
	 EOF 
;

// Rule Design
ruleDesign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_design_0_0=	'design' 
    {
        newLeafNode(lv_design_0_0, grammarAccess.getDesignAccess().getDesignDesignKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDesignRule());
	        }
       		setWithLastConsumed($current, "design", true, "design");
	    }

)
)
    |(
(
		lv_subdesign_1_0=	'subdesign' 
    {
        newLeafNode(lv_subdesign_1_0, grammarAccess.getDesignAccess().getSubdesignSubdesignKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDesignRule());
	        }
       		setWithLastConsumed($current, "subdesign", true, "subdesign");
	    }

)
))(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getDesignAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDesignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDesignAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesignAccess().getElementsDesignElementParserRuleCall_3_0()); 
	    }
		lv_elements_4_0=ruleDesignElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesignRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"DesignElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDesignAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDesignElement
entryRuleDesignElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesignElementRule()); }
	 iv_ruleDesignElement=ruleDesignElement 
	 { $current=$iv_ruleDesignElement.current; } 
	 EOF 
;

// Rule DesignElement
ruleDesignElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesignElementAccess().getConnectionParserRuleCall_0()); 
    }
    this_Connection_0=ruleConnection
    { 
        $current = $this_Connection_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDesignElementAccess().getInstanceParserRuleCall_1()); 
    }
    this_Instance_1=ruleInstance
    { 
        $current = $this_Instance_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDesignElementAccess().getConnectionAssignParserRuleCall_2()); 
    }
    this_ConnectionAssign_2=ruleConnectionAssign
    { 
        $current = $this_ConnectionAssign_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDesignElementAccess().getInfoParserRuleCall_3()); 
    }
    this_Info_3=ruleInfo
    { 
        $current = $this_Info_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConnection
entryRuleConnection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectionRule()); }
	 iv_ruleConnection=ruleConnection 
	 { $current=$iv_ruleConnection.current; } 
	 EOF 
;

// Rule Connection
ruleConnection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_net_0_0=	'net' 
    {
        newLeafNode(lv_net_0_0, grammarAccess.getConnectionAccess().getNetNetKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionRule());
	        }
       		setWithLastConsumed($current, "net", true, "net");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getVectorVectorParserRuleCall_0_1_0()); 
	    }
		lv_vector_1_0=ruleVector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRule());
	        }
       		set(
       			$current, 
       			"vector",
        		lv_vector_1_0, 
        		"Vector");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_0_2_0()); 
	    }
		lv_names_2_0=ruleConnectionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_2_0, 
        		"ConnectionName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConnectionAccess().getCommaKeyword_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_0_3_1_0()); 
	    }
		lv_names_4_0=ruleConnectionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_4_0, 
        		"ConnectionName");
	        afterParserOrEnumRuleCall();
	    }

)
))*((	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_0_4_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getElementsNetElementParserRuleCall_0_4_0_1_0()); 
	    }
		lv_elements_6_0=ruleNetElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"NetElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_0_4_0_2());
    }
)
    |	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConnectionAccess().getSemicolonKeyword_0_4_1());
    }
))
    |((
(
		lv_port_9_0=	'port' 
    {
        newLeafNode(lv_port_9_0, grammarAccess.getConnectionAccess().getPortPortKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionRule());
	        }
       		setWithLastConsumed($current, "port", true, "port");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getVectorVectorParserRuleCall_1_1_0()); 
	    }
		lv_vector_10_0=ruleVector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRule());
	        }
       		set(
       			$current, 
       			"vector",
        		lv_vector_10_0, 
        		"Vector");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_1_2_0()); 
	    }
		lv_names_11_0=ruleConnectionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_11_0, 
        		"ConnectionName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getConnectionAccess().getCommaKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getNamesConnectionNameParserRuleCall_1_3_1_0()); 
	    }
		lv_names_13_0=ruleConnectionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_13_0, 
        		"ConnectionName");
	        afterParserOrEnumRuleCall();
	    }

)
))*((	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_1_4_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAccess().getElementsPortElementParserRuleCall_1_4_0_1_0()); 
	    }
		lv_elements_15_0=rulePortElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_15_0, 
        		"PortElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_1_4_0_2());
    }
)
    |	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getConnectionAccess().getSemicolonKeyword_1_4_1());
    }
)))
;





// Entry rule entryRuleNetElement
entryRuleNetElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNetElementRule()); }
	 iv_ruleNetElement=ruleNetElement 
	 { $current=$iv_ruleNetElement.current; } 
	 EOF 
;

// Rule NetElement
ruleNetElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNetElementAccess().getAttrParserRuleCall_0()); 
    }
    this_Attr_0=ruleAttr
    { 
        $current = $this_Attr_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNetElementAccess().getInfoParserRuleCall_1()); 
    }
    this_Info_1=ruleInfo
    { 
        $current = $this_Info_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePortElement
entryRulePortElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortElementRule()); }
	 iv_rulePortElement=rulePortElement 
	 { $current=$iv_rulePortElement.current; } 
	 EOF 
;

// Rule PortElement
rulePortElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPortElementAccess().getInfoParserRuleCall()); 
    }
    this_Info_0=ruleInfo
    { 
        $current = $this_Info_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleInstance
entryRuleInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceRule()); }
	 iv_ruleInstance=ruleInstance 
	 { $current=$iv_ruleInstance.current; } 
	 EOF 
;

// Rule Instance
ruleInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_inst_0_0=	'inst' 
    {
        newLeafNode(lv_inst_0_0, grammarAccess.getInstanceAccess().getInstInstKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed($current, "inst", true, "inst");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getArrayArrayParserRuleCall_0_1_0()); 
	    }
		lv_array_1_0=ruleArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_1_0, 
        		"Array");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='of' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstanceAccess().getOfKeyword_0_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getDeviceDeviceCrossReference_0_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getElementsInstanceElementParserRuleCall_0_6_0()); 
	    }
		lv_elements_6_0=ruleInstanceElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"InstanceElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_0_7());
    }
)
    |((
(
		lv_subInst_8_0=	'subinst' 
    {
        newLeafNode(lv_subInst_8_0, grammarAccess.getInstanceAccess().getSubInstSubinstKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed($current, "subInst", true, "subinst");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getArrayArrayParserRuleCall_1_1_0()); 
	    }
		lv_array_9_0=ruleArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_9_0, 
        		"Array");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_10_0=RULE_ID
		{
			newLeafNode(lv_name_10_0, grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"ID");
	    }

)
)	otherlv_11='of' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInstanceAccess().getOfKeyword_1_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getSubDesignDesignCrossReference_1_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_prefix_13_0=RULE_STRING
		{
			newLeafNode(lv_prefix_13_0, grammarAccess.getInstanceAccess().getPrefixSTRINGTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"prefix",
        		lv_prefix_13_0, 
        		"STRING");
	    }

)
)?	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_1_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getElementsSubInstanceElementParserRuleCall_1_7_0()); 
	    }
		lv_elements_15_0=ruleSubInstanceElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_15_0, 
        		"SubInstanceElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_1_8());
    }
))
;





// Entry rule entryRuleInstanceElement
entryRuleInstanceElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceElementRule()); }
	 iv_ruleInstanceElement=ruleInstanceElement 
	 { $current=$iv_ruleInstanceElement.current; } 
	 EOF 
;

// Rule InstanceElement
ruleInstanceElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInstanceElementAccess().getAttrParserRuleCall_0()); 
    }
    this_Attr_0=ruleAttr
    { 
        $current = $this_Attr_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstanceElementAccess().getRefAttrParserRuleCall_1()); 
    }
    this_RefAttr_1=ruleRefAttr
    { 
        $current = $this_RefAttr_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstanceElementAccess().getPinAssignParserRuleCall_2()); 
    }
    this_PinAssign_2=rulePinAssign
    { 
        $current = $this_PinAssign_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstanceElementAccess().getInfoParserRuleCall_3()); 
    }
    this_Info_3=ruleInfo
    { 
        $current = $this_Info_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubInstanceElement
entryRuleSubInstanceElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubInstanceElementRule()); }
	 iv_ruleSubInstanceElement=ruleSubInstanceElement 
	 { $current=$iv_ruleSubInstanceElement.current; } 
	 EOF 
;

// Rule SubInstanceElement
ruleSubInstanceElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubInstanceElementAccess().getAttrParserRuleCall_0()); 
    }
    this_Attr_0=ruleAttr
    { 
        $current = $this_Attr_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubInstanceElementAccess().getSubAttrParserRuleCall_1()); 
    }
    this_SubAttr_1=ruleSubAttr
    { 
        $current = $this_SubAttr_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubInstanceElementAccess().getPortAssignParserRuleCall_2()); 
    }
    this_PortAssign_2=rulePortAssign
    { 
        $current = $this_PortAssign_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubInstanceElementAccess().getInfoParserRuleCall_3()); 
    }
    this_Info_3=ruleInfo
    { 
        $current = $this_Info_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRefAttr
entryRuleRefAttr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefAttrRule()); }
	 iv_ruleRefAttr=ruleRefAttr 
	 { $current=$iv_ruleRefAttr.current; } 
	 EOF 
;

// Rule RefAttr
ruleRefAttr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRefAttrAccess().getQualifierQualifierParserRuleCall_0_0()); 
	    }
		lv_qualifier_0_0=ruleQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefAttrRule());
	        }
       		set(
       			$current, 
       			"qualifier",
        		lv_qualifier_0_0, 
        		"Qualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefAttrRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRefAttrAccess().getRefAttrCrossReference_1_0()); 
	}

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRefAttrAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getRefAttrAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefAttrRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRefAttrAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRulePinAssign
entryRulePinAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPinAssignRule()); }
	 iv_rulePinAssign=rulePinAssign 
	 { $current=$iv_rulePinAssign.current; } 
	 EOF 
;

// Rule PinAssign
rulePinAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_combined_0_0=	'combine' 
    {
        newLeafNode(lv_combined_0_0, grammarAccess.getPinAssignAccess().getCombinedCombineKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPinAssignRule());
	        }
       		setWithLastConsumed($current, "combined", true, "combine");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPinAssignAccess().getLeftParenthesisKeyword_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPinAssignAccess().getQualifierQualifierParserRuleCall_0_0_2_0()); 
	    }
		lv_qualifier_2_0=ruleQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinAssignRule());
	        }
       		set(
       			$current, 
       			"qualifier",
        		lv_qualifier_2_0, 
        		"Qualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPinAssignRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPinAssignAccess().getRefPinCrossReference_0_0_3_0()); 
	    }
		rulePhdlID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPinAssignAccess().getSlicesSlicesParserRuleCall_0_0_4_0()); 
	    }
		lv_slices_4_0=ruleSlices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinAssignRule());
	        }
       		set(
       			$current, 
       			"slices",
        		lv_slices_4_0, 
        		"Slices");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPinAssignAccess().getRightParenthesisKeyword_0_0_5());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPinAssignAccess().getQualifierQualifierParserRuleCall_0_1_0_0()); 
	    }
		lv_qualifier_6_0=ruleQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinAssignRule());
	        }
       		set(
       			$current, 
       			"qualifier",
        		lv_qualifier_6_0, 
        		"Qualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPinAssignRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPinAssignAccess().getRefPinCrossReference_0_1_1_0()); 
	    }
		rulePhdlID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPinAssignAccess().getSlicesSlicesParserRuleCall_0_1_2_0()); 
	    }
		lv_slices_8_0=ruleSlices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinAssignRule());
	        }
       		set(
       			$current, 
       			"slices",
        		lv_slices_8_0, 
        		"Slices");
	        afterParserOrEnumRuleCall();
	    }

)
)?))	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPinAssignAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPinAssignAccess().getConcatenationConcatenationParserRuleCall_2_0()); 
	    }
		lv_concatenation_10_0=ruleConcatenation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPinAssignRule());
	        }
       		set(
       			$current, 
       			"concatenation",
        		lv_concatenation_10_0, 
        		"Concatenation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPinAssignAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleSubAttr
entryRuleSubAttr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubAttrRule()); }
	 iv_ruleSubAttr=ruleSubAttr 
	 { $current=$iv_ruleSubAttr.current; } 
	 EOF 
;

// Rule SubAttr
ruleSubAttr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubAttrAccess().getQualifierQualifierParserRuleCall_0_0()); 
	    }
		lv_qualifier_0_0=ruleQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubAttrRule());
	        }
       		set(
       			$current, 
       			"qualifier",
        		lv_qualifier_0_0, 
        		"Qualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubAttrRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSubAttrAccess().getRefReferenceableCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubAttrAccess().getRefIndicesIndicesParserRuleCall_2_0()); 
	    }
		lv_refIndices_2_0=ruleIndices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubAttrRule());
	        }
       		set(
       			$current, 
       			"refIndices",
        		lv_refIndices_2_0, 
        		"Indices");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubAttrAccess().getTailRefTailParserRuleCall_3_0()); 
	    }
		lv_tail_3_0=ruleRefTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubAttrRule());
	        }
       		set(
       			$current, 
       			"tail",
        		lv_tail_3_0, 
        		"RefTail");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubAttrAccess().getEqualsSignKeyword_4());
    }
(
(
		lv_value_5_0=RULE_STRING
		{
			newLeafNode(lv_value_5_0, grammarAccess.getSubAttrAccess().getValueSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubAttrRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"STRING");
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSubAttrAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleRefTail
entryRuleRefTail returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefTailRule()); }
	 iv_ruleRefTail=ruleRefTail 
	 { $current=$iv_ruleRefTail.current; } 
	 EOF 
;

// Rule RefTail
ruleRefTail returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='.' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRefTailAccess().getFullStopKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefTailRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRefTailAccess().getRefReferenceableCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRefTailAccess().getRefIndicesIndicesParserRuleCall_2_0()); 
	    }
		lv_refIndices_2_0=ruleIndices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefTailRule());
	        }
       		set(
       			$current, 
       			"refIndices",
        		lv_refIndices_2_0, 
        		"Indices");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRefTailAccess().getTailRefTailParserRuleCall_3_0()); 
	    }
		lv_tail_3_0=ruleRefTail		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefTailRule());
	        }
       		set(
       			$current, 
       			"tail",
        		lv_tail_3_0, 
        		"RefTail");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulePortAssign
entryRulePortAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortAssignRule()); }
	 iv_rulePortAssign=rulePortAssign 
	 { $current=$iv_rulePortAssign.current; } 
	 EOF 
;

// Rule PortAssign
rulePortAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_combined_0_0=	'combine' 
    {
        newLeafNode(lv_combined_0_0, grammarAccess.getPortAssignAccess().getCombinedCombineKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortAssignRule());
	        }
       		setWithLastConsumed($current, "combined", true, "combine");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPortAssignAccess().getLeftParenthesisKeyword_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAssignAccess().getQualifierQualifierParserRuleCall_0_0_2_0()); 
	    }
		lv_qualifier_2_0=ruleQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortAssignRule());
	        }
       		set(
       			$current, 
       			"qualifier",
        		lv_qualifier_2_0, 
        		"Qualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortAssignRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPortAssignAccess().getRefConnectionNameCrossReference_0_0_3_0()); 
	    }
		rulePhdlID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAssignAccess().getSlicesSlicesParserRuleCall_0_0_4_0()); 
	    }
		lv_slices_4_0=ruleSlices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortAssignRule());
	        }
       		set(
       			$current, 
       			"slices",
        		lv_slices_4_0, 
        		"Slices");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPortAssignAccess().getRightParenthesisKeyword_0_0_5());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPortAssignAccess().getQualifierQualifierParserRuleCall_0_1_0_0()); 
	    }
		lv_qualifier_6_0=ruleQualifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortAssignRule());
	        }
       		set(
       			$current, 
       			"qualifier",
        		lv_qualifier_6_0, 
        		"Qualifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortAssignRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPortAssignAccess().getRefConnectionNameCrossReference_0_1_1_0()); 
	    }
		rulePhdlID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAssignAccess().getSlicesSlicesParserRuleCall_0_1_2_0()); 
	    }
		lv_slices_8_0=ruleSlices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortAssignRule());
	        }
       		set(
       			$current, 
       			"slices",
        		lv_slices_8_0, 
        		"Slices");
	        afterParserOrEnumRuleCall();
	    }

)
)?))	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPortAssignAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAssignAccess().getConcatenationConcatenationParserRuleCall_2_0()); 
	    }
		lv_concatenation_10_0=ruleConcatenation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortAssignRule());
	        }
       		set(
       			$current, 
       			"concatenation",
        		lv_concatenation_10_0, 
        		"Concatenation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPortAssignAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleConnectionAssign
entryRuleConnectionAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectionAssignRule()); }
	 iv_ruleConnectionAssign=ruleConnectionAssign 
	 { $current=$iv_ruleConnectionAssign.current; } 
	 EOF 
;

// Rule ConnectionAssign
ruleConnectionAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionAssignRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConnectionAssignAccess().getRefConnectionNameCrossReference_0_0()); 
	    }
		rulePhdlID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAssignAccess().getSlicesSlicesParserRuleCall_1_0()); 
	    }
		lv_slices_1_0=ruleSlices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionAssignRule());
	        }
       		set(
       			$current, 
       			"slices",
        		lv_slices_1_0, 
        		"Slices");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConnectionAssignAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionAssignAccess().getConcatenationConcatenationParserRuleCall_3_0()); 
	    }
		lv_concatenation_3_0=ruleConcatenation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionAssignRule());
	        }
       		set(
       			$current, 
       			"concatenation",
        		lv_concatenation_3_0, 
        		"Concatenation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConnectionAssignAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleConcatenation
entryRuleConcatenation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcatenationRule()); }
	 iv_ruleConcatenation=ruleConcatenation 
	 { $current=$iv_ruleConcatenation.current; } 
	 EOF 
;

// Rule Concatenation
ruleConcatenation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConcatenationAccess().getLeftCurlyBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getConnectionsConnectionRefParserRuleCall_0_1_0()); 
	    }
		lv_connections_1_0=ruleConnectionRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_1_0, 
        		"ConnectionRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConcatenationAccess().getCommaKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getConnectionsConnectionRefParserRuleCall_0_2_1_0()); 
	    }
		lv_connections_3_0=ruleConnectionRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_3_0, 
        		"ConnectionRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConcatenationAccess().getRightCurlyBracketKeyword_0_3());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getConnectionsConnectionRefParserRuleCall_1_0_0()); 
	    }
		lv_connections_5_0=ruleConnectionRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_5_0, 
        		"ConnectionRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='&' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConcatenationAccess().getAmpersandKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getConnectionsConnectionRefParserRuleCall_1_1_1_0()); 
	    }
		lv_connections_7_0=ruleConnectionRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_7_0, 
        		"ConnectionRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_replicated_8_0=	'<' 
    {
        newLeafNode(lv_replicated_8_0, grammarAccess.getConcatenationAccess().getReplicatedLessThanSignKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcatenationRule());
	        }
       		setWithLastConsumed($current, "replicated", true, "<");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getReplicateConnectionRefParserRuleCall_2_1_0()); 
	    }
		lv_replicate_9_0=ruleConnectionRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationRule());
	        }
       		set(
       			$current, 
       			"replicate",
        		lv_replicate_9_0, 
        		"ConnectionRef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='>' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getConcatenationAccess().getGreaterThanSignKeyword_2_2());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationAccess().getReplicateConnectionRefParserRuleCall_3_0_0()); 
	    }
		lv_replicate_11_0=ruleConnectionRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationRule());
	        }
       		set(
       			$current, 
       			"replicate",
        		lv_replicate_11_0, 
        		"ConnectionRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_replicated_12_0=	'*' 
    {
        newLeafNode(lv_replicated_12_0, grammarAccess.getConcatenationAccess().getReplicatedAsteriskKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcatenationRule());
	        }
       		setWithLastConsumed($current, "replicated", true, "*");
	    }

)
))
    |(
(
		lv_open_13_0=	'open' 
    {
        newLeafNode(lv_open_13_0, grammarAccess.getConcatenationAccess().getOpenOpenKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcatenationRule());
	        }
       		setWithLastConsumed($current, "open", true, "open");
	    }

)
))
;





// Entry rule entryRuleConnectionRef
entryRuleConnectionRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectionRefRule()); }
	 iv_ruleConnectionRef=ruleConnectionRef 
	 { $current=$iv_ruleConnectionRef.current; } 
	 EOF 
;

// Rule ConnectionRef
ruleConnectionRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectionRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConnectionRefAccess().getRefConnectionNameCrossReference_0_0()); 
	    }
		rulePhdlID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionRefAccess().getSlicesSlicesParserRuleCall_1_0()); 
	    }
		lv_slices_1_0=ruleSlices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionRefRule());
	        }
       		set(
       			$current, 
       			"slices",
        		lv_slices_1_0, 
        		"Slices");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleConnectionName
entryRuleConnectionName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectionNameRule()); }
	 iv_ruleConnectionName=ruleConnectionName 
	 { $current=$iv_ruleConnectionName.current; } 
	 EOF 
;

// Rule ConnectionName
ruleConnectionName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionNameAccess().getNamePhdlIDParserRuleCall_0()); 
	    }
		lv_name_0_0=rulePhdlID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionNameRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"PhdlID");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleIndices
entryRuleIndices returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndicesRule()); }
	 iv_ruleIndices=ruleIndices 
	 { $current=$iv_ruleIndices.current; } 
	 EOF 
;

// Rule Indices
ruleIndices returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIndicesAccess().getLeftParenthesisKeyword_0());
    }
(((
(
		lv_msb_1_0=RULE_INT
		{
			newLeafNode(lv_msb_1_0, grammarAccess.getIndicesAccess().getMsbINTTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndicesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"msb",
        		lv_msb_1_0, 
        		"INT");
	    }

)
)(
(
		lv_array_2_0=	':' 
    {
        newLeafNode(lv_array_2_0, grammarAccess.getIndicesAccess().getArrayColonKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndicesRule());
	        }
       		setWithLastConsumed($current, "array", true, ":");
	    }

)
)(
(
		lv_lsb_3_0=RULE_INT
		{
			newLeafNode(lv_lsb_3_0, grammarAccess.getIndicesAccess().getLsbINTTerminalRuleCall_1_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndicesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lsb",
        		lv_lsb_3_0, 
        		"INT");
	    }

)
))
    |((
(
		lv_indices_4_0=RULE_INT
		{
			newLeafNode(lv_indices_4_0, grammarAccess.getIndicesAccess().getIndicesINTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndicesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"indices",
        		lv_indices_4_0, 
        		"INT");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIndicesAccess().getCommaKeyword_1_1_1_0());
    }
(
(
		lv_indices_6_0=RULE_INT
		{
			newLeafNode(lv_indices_6_0, grammarAccess.getIndicesAccess().getIndicesINTTerminalRuleCall_1_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndicesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"indices",
        		lv_indices_6_0, 
        		"INT");
	    }

)
))*))	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIndicesAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleSlices
entryRuleSlices returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSlicesRule()); }
	 iv_ruleSlices=ruleSlices 
	 { $current=$iv_ruleSlices.current; } 
	 EOF 
;

// Rule Slices
ruleSlices returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSlicesAccess().getLeftSquareBracketKeyword_0());
    }
(((
(
		lv_msb_1_0=RULE_INT
		{
			newLeafNode(lv_msb_1_0, grammarAccess.getSlicesAccess().getMsbINTTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSlicesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"msb",
        		lv_msb_1_0, 
        		"INT");
	    }

)
)(
(
		lv_vector_2_0=	':' 
    {
        newLeafNode(lv_vector_2_0, grammarAccess.getSlicesAccess().getVectorColonKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSlicesRule());
	        }
       		setWithLastConsumed($current, "vector", true, ":");
	    }

)
)(
(
		lv_lsb_3_0=RULE_INT
		{
			newLeafNode(lv_lsb_3_0, grammarAccess.getSlicesAccess().getLsbINTTerminalRuleCall_1_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSlicesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lsb",
        		lv_lsb_3_0, 
        		"INT");
	    }

)
))
    |((
(
		lv_slices_4_0=RULE_INT
		{
			newLeafNode(lv_slices_4_0, grammarAccess.getSlicesAccess().getSlicesINTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSlicesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"slices",
        		lv_slices_4_0, 
        		"INT");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSlicesAccess().getCommaKeyword_1_1_1_0());
    }
(
(
		lv_slices_6_0=RULE_INT
		{
			newLeafNode(lv_slices_6_0, grammarAccess.getSlicesAccess().getSlicesINTTerminalRuleCall_1_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSlicesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"slices",
        		lv_slices_6_0, 
        		"INT");
	    }

)
))*))	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSlicesAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleVector
entryRuleVector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVectorRule()); }
	 iv_ruleVector=ruleVector 
	 { $current=$iv_ruleVector.current; } 
	 EOF 
;

// Rule Vector
ruleVector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVectorAccess().getVectorAction_0(),
            $current);
    }
)(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVectorAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		lv_msb_2_0=RULE_INT
		{
			newLeafNode(lv_msb_2_0, grammarAccess.getVectorAccess().getMsbINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"msb",
        		lv_msb_2_0, 
        		"INT");
	    }

)
)(
(
		lv_vector_3_0=	':' 
    {
        newLeafNode(lv_vector_3_0, grammarAccess.getVectorAccess().getVectorColonKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVectorRule());
	        }
       		setWithLastConsumed($current, "vector", true, ":");
	    }

)
)(
(
		lv_lsb_4_0=RULE_INT
		{
			newLeafNode(lv_lsb_4_0, grammarAccess.getVectorAccess().getLsbINTTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lsb",
        		lv_lsb_4_0, 
        		"INT");
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVectorAccess().getRightSquareBracketKeyword_1_4());
    }
)?)
;





// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	 iv_ruleArray=ruleArray 
	 { $current=$iv_ruleArray.current; } 
	 EOF 
;

// Rule Array
ruleArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArrayAccess().getArrayAction_0(),
            $current);
    }
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		lv_msb_2_0=RULE_INT
		{
			newLeafNode(lv_msb_2_0, grammarAccess.getArrayAccess().getMsbINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"msb",
        		lv_msb_2_0, 
        		"INT");
	    }

)
)(
(
		lv_array_3_0=	':' 
    {
        newLeafNode(lv_array_3_0, grammarAccess.getArrayAccess().getArrayColonKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayRule());
	        }
       		setWithLastConsumed($current, "array", true, ":");
	    }

)
)(
(
		lv_lsb_4_0=RULE_INT
		{
			newLeafNode(lv_lsb_4_0, grammarAccess.getArrayAccess().getLsbINTTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lsb",
        		lv_lsb_4_0, 
        		"INT");
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayAccess().getRightParenthesisKeyword_1_4());
    }
)?)
;





// Entry rule entryRuleQualifier
entryRuleQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifierRule()); }
	 iv_ruleQualifier=ruleQualifier 
	 { $current=$iv_ruleQualifier.current; } 
	 EOF 
;

// Rule Qualifier
ruleQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='this' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQualifierAccess().getThisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualifierAccess().getIndicesIndicesParserRuleCall_1_0()); 
	    }
		lv_indices_1_0=ruleIndices		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualifierRule());
	        }
       		set(
       			$current, 
       			"indices",
        		lv_indices_1_0, 
        		"Indices");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQualifierAccess().getFullStopKeyword_2());
    }
)
;









// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getPhdlIDParserRuleCall_0()); 
    }
    this_PhdlID_0=rulePhdlID    {
		$current.merge(this_PhdlID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getPhdlIDParserRuleCall_1_1()); 
    }
    this_PhdlID_2=rulePhdlID    {
		$current.merge(this_PhdlID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    ;





// Entry rule entryRulePhdlID
entryRulePhdlID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPhdlIDRule()); } 
	 iv_rulePhdlID=rulePhdlID 
	 { $current=$iv_rulePhdlID.current.getText(); }  
	 EOF 
;

// Rule PhdlID
rulePhdlID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getPhdlIDAccess().getINTTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getPhdlIDAccess().getIDTerminalRuleCall_1()); 
    }

    |    this_PINNUM_2=RULE_PINNUM    {
		$current.merge(this_PINNUM_2);
    }

    { 
    newLeafNode(this_PINNUM_2, grammarAccess.getPhdlIDAccess().getPINNUMTerminalRuleCall_2()); 
    }
)
    ;





// Rule PinType
rulePinType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='pin' 
	{
        $current = grammarAccess.getPinTypeAccess().getPinEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getPinTypeAccess().getPinEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='inpin' 
	{
        $current = grammarAccess.getPinTypeAccess().getInputEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getPinTypeAccess().getInputEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='outpin' 
	{
        $current = grammarAccess.getPinTypeAccess().getOutputEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getPinTypeAccess().getOutputEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='iopin' 
	{
        $current = grammarAccess.getPinTypeAccess().getInOutEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getPinTypeAccess().getInOutEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='pwrpin' 
	{
        $current = grammarAccess.getPinTypeAccess().getPowerEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getPinTypeAccess().getPowerEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='suppin' 
	{
        $current = grammarAccess.getPinTypeAccess().getSupplyEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getPinTypeAccess().getSupplyEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='ocpin' 
	{
        $current = grammarAccess.getPinTypeAccess().getOpenCollectorEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getPinTypeAccess().getOpenCollectorEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='oepin' 
	{
        $current = grammarAccess.getPinTypeAccess().getOpenEmitterEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getPinTypeAccess().getOpenEmitterEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='tripin' 
	{
        $current = grammarAccess.getPinTypeAccess().getTristateEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getPinTypeAccess().getTristateEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='passpin' 
	{
        $current = grammarAccess.getPinTypeAccess().getPassiveEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getPinTypeAccess().getPassiveEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='ncpin' 
	{
        $current = grammarAccess.getPinTypeAccess().getNoConnectEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getPinTypeAccess().getNoConnectEnumLiteralDeclaration_10()); 
    }
));



RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9'|'1'..'9' ('0'..'9')+);

RULE_PINNUM : ('0'..'9'|'a'..'z'|'A'..'Z'|'_'|'+'|'-'|'$'|'/'|'@'|'!')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;



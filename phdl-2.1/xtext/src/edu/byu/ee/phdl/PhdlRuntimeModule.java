/*
 * generated by Xtext
 */
package edu.byu.ee.phdl;

import java.util.Collection;
import java.util.Collections;
import java.util.List;

import org.apache.commons.cli.CommandLine;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.URIConverter;
import org.eclipse.xtext.resource.containers.FlatResourceSetBasedAllContainersState;
import org.eclipse.xtext.resource.containers.IAllContainersState;
import org.eclipse.xtext.resource.containers.ResourceSetBasedAllContainersStateProvider;

import com.google.common.collect.Lists;

/**
 * Use this class to register components to be used at runtime / without the
 * Equinox extension registry.
 */
public class PhdlRuntimeModule extends edu.byu.ee.phdl.AbstractPhdlRuntimeModule {

	private final CommandLine commandLine = edu.byu.ee.phdl.compile.PhdlCompile.getCommandLine();

	public static class FixedFlatResourceSetBasedAllContainersState extends FlatResourceSetBasedAllContainersState {

		public FixedFlatResourceSetBasedAllContainersState(ResourceSet rs) {
			super(rs);
		}

		@Override
		public Collection<URI> getContainedURIs(String containerHandle) {
			if (!getHandle().equals(containerHandle))
				return Collections.emptySet();
			ResourceSet resourceSet = getResourceSet();
			List<URI> uris = Lists.newArrayListWithCapacity(resourceSet.getResources().size());
			URIConverter uriConverter = resourceSet.getURIConverter();
			for (Resource r : resourceSet.getResources())
				uris.add(uriConverter.normalize(r.getURI()));
			return uris;
		}
	}

	public static class FixedResourceSetBasedAllContainersStateProvider extends
			ResourceSetBasedAllContainersStateProvider {

		@Override
		protected IAllContainersState handleAdapterNotFound(ResourceSet resourceSet) {
			return new FixedFlatResourceSetBasedAllContainersState(resourceSet);
		}
	}

	@Override
	public Class<? extends IAllContainersState.Provider> bindIAllContainersState$Provider() {
		return FixedResourceSetBasedAllContainersStateProvider.class;
	}

	@Override
	public Class<? extends org.eclipse.xtext.generator.IGenerator> bindIGenerator() {
		return edu.byu.ee.phdl.generator.PhdlGeneratorImpl.class;
	}

	@Override
	@org.eclipse.xtext.service.SingletonBinding(eager = true)
	public Class<? extends edu.byu.ee.phdl.validation.PhdlJavaValidator> bindPhdlJavaValidator() {
		if (commandLine != null)
			return edu.byu.ee.phdl.validation.PhdlJavaCommandLineValidator.class;
		else
			return edu.byu.ee.phdl.validation.PhdlJavaValidator.class;
	}
}
